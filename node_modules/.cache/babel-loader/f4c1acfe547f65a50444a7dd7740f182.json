{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-list\\\\task-list.js\";\nimport React, { Component } from 'react';\nimport TaskListItem from \"../task-list-item/task-list-item\";\nimport './task-list.css';\nexport default class TaskList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listToDo: [{\n        text: 'Completed',\n        className: 'completed',\n        id: 1\n      }, {\n        text: 'Editing',\n        className: 'editing',\n        id: 2\n      }, {\n        text: 'Active',\n        className: '',\n        id: 3\n      }]\n    };\n\n    this.taskEditing = (id, task, val) => {\n      this.setState(({\n        listToDo\n      }) => {\n        const newArr = JSON.parse(JSON.stringify(listToDo));\n        const inx = listToDo.findIndex(el => el.id === id);\n\n        if (task === 'del') {\n          newArr.splice(inx, 1);\n        } else if (val) {\n          newArr[inx].className = 'completed';\n          newArr[inx].text = val;\n        } else {\n          newArr[inx].className = `${task}`;\n        }\n\n        return {\n          listToDo: newArr\n        };\n      });\n    };\n  }\n\n  render() {\n    const taskArr = this.state.listToDo;\n    const taskList = taskArr.map(({\n      className,\n      id,\n      text\n    }) => {\n      return /*#__PURE__*/_jsxDEV(TaskListItem, {\n        mainFunction: this.taskEditing,\n        className: className,\n        id: id,\n        other: text\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: [taskList, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-list/task-list.js"],"names":["React","Component","TaskListItem","TaskList","state","listToDo","text","className","id","taskEditing","task","val","setState","newArr","JSON","parse","stringify","inx","findIndex","el","splice","render","taskArr","taskList","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAO,iBAAP;AAIA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAG5CG,KAH4C,GAGpC;AACJC,MAAAA,QAAQ,EAAE,CACN;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,SAAS,EAAE,WAAhC;AAA6CC,QAAAA,EAAE,EAAE;AAAjD,OADM,EAEN;AAAEF,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,SAAS,EAAE,SAA9B;AAAyCC,QAAAA,EAAE,EAAG;AAA9C,OAFM,EAGN;AAAEF,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,EAAE,EAAG;AAAtC,OAHM;AADN,KAHoC;;AAAA,SAa5CC,WAb4C,GAa9B,CAACD,EAAD,EAAKE,IAAL,EAAWC,GAAX,KAAiB;AAC3B,WAAKC,QAAL,CAAc,CAAC;AAACP,QAAAA;AAAD,OAAD,KAAc;AACxB,cAAMQ,MAAM,GAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeX,QAAf,CAAX,CAAhB;AACA,cAAMY,GAAG,GAAGZ,QAAQ,CAACa,SAAT,CAAoBC,EAAD,IAAMA,EAAE,CAACX,EAAH,KAAUA,EAAnC,CAAZ;;AACA,YAAGE,IAAI,KAAK,KAAZ,EAAkB;AACdG,UAAAA,MAAM,CAACO,MAAP,CAAcH,GAAd,EAAmB,CAAnB;AACH,SAFD,MAGK,IAAGN,GAAH,EAAQ;AACTE,UAAAA,MAAM,CAACI,GAAD,CAAN,CAAYV,SAAZ,GAAwB,WAAxB;AACAM,UAAAA,MAAM,CAACI,GAAD,CAAN,CAAYX,IAAZ,GAAmBK,GAAnB;AACH,SAHI,MAGA;AACDE,UAAAA,MAAM,CAACI,GAAD,CAAN,CAAYV,SAAZ,GAAyB,GAAEG,IAAK,EAAhC;AACH;;AACD,eAAO;AACHL,UAAAA,QAAQ,EAAEQ;AADP,SAAP;AAGH,OAfD;AAgBH,KA9B2C;AAAA;;AAgC5CQ,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAI,KAAKlB,KAAL,CAAWC,QAA5B;AACA,UAAMkB,QAAQ,GAAGD,OAAO,CAACE,GAAR,CAAY,CAAC;AAACjB,MAAAA,SAAD;AAAYC,MAAAA,EAAZ;AAAgBF,MAAAA;AAAhB,KAAD,KAAyB;AAClD,0BAAO,QAAC,YAAD;AAAc,QAAA,YAAY,EAAE,KAAKG,WAAjC;AACc,QAAA,SAAS,EAAEF,SADzB;AACoC,QAAA,EAAE,EAAEC,EADxC;AAEc,QAAA,KAAK,EAAEF;AAFrB,SACiDE,EADjD;AAAA;AAAA;AAAA;AAAA,cAAP;AAGH,KAJgB,CAAjB;AAMA,wBACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,iBACKe,QADL,eAEI;AAAS,QAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA9C2C;AA+C/C","sourcesContent":["import React, {Component} from 'react'\r\nimport TaskListItem from \"../task-list-item/task-list-item\";\r\nimport './task-list.css'\r\n\r\n\r\n\r\nexport default class TaskList extends Component {\r\n\r\n\r\n    state = {\r\n        listToDo: [\r\n            { text: 'Completed', className: 'completed', id: 1},\r\n            { text: 'Editing', className: 'editing', id:  2},\r\n            { text: 'Active', className: '', id:  3},\r\n        ]\r\n\r\n\r\n}\r\n\r\n    taskEditing = (id, task, val)=>{\r\n        this.setState(({listToDo})=>{\r\n            const newArr =  JSON.parse(JSON.stringify(listToDo))\r\n            const inx = listToDo.findIndex((el)=>el.id === id)\r\n            if(task === 'del'){\r\n                newArr.splice(inx, 1)\r\n            }\r\n            else if(val) {\r\n                newArr[inx].className = 'completed'\r\n                newArr[inx].text = val;\r\n            }else{\r\n                newArr[inx].className = `${task}`\r\n            }\r\n            return {\r\n                listToDo: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const taskArr =  this.state.listToDo;\r\n        const taskList = taskArr.map(({className, id, text})=>{\r\n            return <TaskListItem mainFunction={this.taskEditing}\r\n                                 className={className} id={id} key={id}\r\n                                 other={text}/>\r\n        })\r\n\r\n        return (\r\n            <ul className='todo-list'>\r\n                {taskList}\r\n                <button  className='new' />\r\n            </ul>\r\n        );\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}