{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-toogle\\\\task-toggle.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './task-toggle.css';\n\nconst TaskToggle = ({\n  className,\n  type,\n  text,\n  changeTaskStatus,\n  id,\n  saveNewTaskValue\n}) => {\n  function onKeyDownInputFieldHandler(evt) {\n    return evt.keyCode === 13 ? saveNewTaskValue(id, evt) : null;\n  }\n\n  const inputField = /*#__PURE__*/_jsxDEV(\"input\", {\n    onKeyDown: onKeyDownInputFieldHandler,\n    defaultValue: text,\n    type: type,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 11\n  }, this),\n        checkbox = /*#__PURE__*/_jsxDEV(\"input\", {\n    onClick: () => changeTaskStatus(id),\n    type: type,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 11\n  }, this);\n\n  return className === 'edit' ? inputField : checkbox;\n};\n\n_c = TaskToggle;\nTaskToggle.defaultProps = {\n  saveEditingTask: () => {},\n  changeTaskStatus: () => {}\n};\nTaskToggle.propTypes = {\n  saveEditingTask: PropTypes.func,\n  changeTaskStatus: PropTypes.func,\n  className: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n};\nexport default TaskToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskToggle\");","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-toogle/task-toggle.jsx"],"names":["React","PropTypes","TaskToggle","className","type","text","changeTaskStatus","id","saveNewTaskValue","onKeyDownInputFieldHandler","evt","keyCode","inputField","checkbox","defaultProps","saveEditingTask","propTypes","func","string","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,mBAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,IAAnB;AAAyBC,EAAAA,gBAAzB;AAA2CC,EAAAA,EAA3C;AAA+CC,EAAAA;AAA/C,CAAD,KAAuE;AACxF,WAASC,0BAAT,CAAoCC,GAApC,EAAyC;AACvC,WAAOA,GAAG,CAACC,OAAJ,KAAgB,EAAhB,GAAqBH,gBAAgB,CAACD,EAAD,EAAKG,GAAL,CAArC,GAAiD,IAAxD;AACD;;AAED,QAAME,UAAU,gBACR;AACE,IAAA,SAAS,EAAEH,0BADb;AAEE,IAAA,YAAY,EAAEJ,IAFhB;AAGE,IAAA,IAAI,EAAED,IAHR;AAIE,IAAA,SAAS,EAAED;AAJb;AAAA;AAAA;AAAA;AAAA,UADR;AAAA,QAOMU,QAAQ,gBACN;AAAO,IAAA,OAAO,EAAE,MAAMP,gBAAgB,CAACC,EAAD,CAAtC;AAA4C,IAAA,IAAI,EAAEH,IAAlD;AAAwD,IAAA,SAAS,EAAED;AAAnE;AAAA;AAAA;AAAA;AAAA,UARR;;AAWA,SAAOA,SAAS,KAAK,MAAd,GAAuBS,UAAvB,GAAoCC,QAA3C;AACD,CAjBD;;KAAMX,U;AAmBNA,UAAU,CAACY,YAAX,GAA0B;AACxBC,EAAAA,eAAe,EAAE,MAAM,CAAE,CADD;AAExBT,EAAAA,gBAAgB,EAAE,MAAM,CAAE;AAFF,CAA1B;AAKAJ,UAAU,CAACc,SAAX,GAAuB;AACrBD,EAAAA,eAAe,EAAEd,SAAS,CAACgB,IADN;AAErBX,EAAAA,gBAAgB,EAAEL,SAAS,CAACgB,IAFP;AAGrBd,EAAAA,SAAS,EAAEF,SAAS,CAACiB,MAAV,CAAiBC,UAHP;AAIrBf,EAAAA,IAAI,EAAEH,SAAS,CAACiB,MAAV,CAAiBC,UAJF;AAKrBd,EAAAA,IAAI,EAAEJ,SAAS,CAACiB,MAAV,CAAiBC;AALF,CAAvB;AAQA,eAAejB,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './task-toggle.css';\n\nconst TaskToggle = ({ className, type, text, changeTaskStatus, id, saveNewTaskValue }) => {\n  function onKeyDownInputFieldHandler(evt) {\n    return evt.keyCode === 13 ? saveNewTaskValue(id, evt) : null;\n  }\n\n  const inputField = (\n          <input\n            onKeyDown={onKeyDownInputFieldHandler}\n            defaultValue={text}\n            type={type}\n            className={className} />\n        ),\n        checkbox = (\n          <input onClick={() => changeTaskStatus(id)} type={type} className={className} />\n        );\n\n  return className === 'edit' ? inputField : checkbox;\n};\n\nTaskToggle.defaultProps = {\n  saveEditingTask: () => {},\n  changeTaskStatus: () => {},\n};\n\nTaskToggle.propTypes = {\n  saveEditingTask: PropTypes.func,\n  changeTaskStatus: PropTypes.func,\n  className: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default TaskToggle;\n"]},"metadata":{},"sourceType":"module"}