{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-toogle\\\\task-toggle.js\";\nimport React from 'react';\nimport PropType from 'prop-types';\nimport './task-toggle.css';\n\nconst TaskToggle = ({\n  className,\n  type,\n  value,\n  changeTaskStatus,\n  id,\n  saveEditingTask\n}) => {\n  function onKeyDownInputFieldHandler(e) {\n    if (e.keyCode === 13) return saveEditingTask(id, e);\n  }\n\n  ;\n\n  function onClickCheckboxHandler() {\n    return changeTaskStatus(id);\n  }\n\n  const inputField = /*#__PURE__*/_jsxDEV(\"input\", {\n    onKeyDown: onKeyDownInputFieldHandler,\n    defaultValue: value,\n    type: type,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 24\n  }, this);\n\n  const checkbox = /*#__PURE__*/_jsxDEV(\"input\", {\n    onClick: onClickCheckboxHandler,\n    type: type,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 22\n  }, this);\n\n  return className === 'edit' ? inputField : checkbox;\n};\n\n_c = TaskToggle;\nTaskToggle.defaultProps = {\n  saveEditingTask: () => {},\n  changeTaskStatus: () => {}\n};\nTaskToggle.propTypes = {\n  saveEditingTask: PropType.func.isRequired,\n  changeTaskStatus: PropType.func.isRequired,\n  className: PropType.string,\n  type: PropType.string,\n  value: PropType.string\n};\nexport default TaskToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskToggle\");","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-toogle/task-toggle.js"],"names":["React","PropType","TaskToggle","className","type","value","changeTaskStatus","id","saveEditingTask","onKeyDownInputFieldHandler","e","keyCode","onClickCheckboxHandler","inputField","checkbox","defaultProps","propTypes","func","isRequired","string"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,mBAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA,gBAAzB;AAA2CC,EAAAA,EAA3C;AAA+CC,EAAAA;AAA/C,CAAD,KAAqE;AAEpF,WAASC,0BAAT,CAAoCC,CAApC,EAAuC;AACnC,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB,OAAOH,eAAe,CAACD,EAAD,EAAKG,CAAL,CAAtB;AACzB;;AAAA;;AAED,WAASE,sBAAT,GAAkC;AAC9B,WAAON,gBAAgB,CAACC,EAAD,CAAvB;AACH;;AAED,QAAMM,UAAU,gBAAG;AAAO,IAAA,SAAS,EAAEJ,0BAAlB;AACO,IAAA,YAAY,EAAEJ,KADrB;AAC4B,IAAA,IAAI,EAAED,IADlC;AAEO,IAAA,SAAS,EAAED;AAFlB;AAAA;AAAA;AAAA;AAAA,UAAnB;;AAIA,QAAMW,QAAQ,gBAAG;AAAO,IAAA,OAAO,EAAEF,sBAAhB;AACO,IAAA,IAAI,EAAER,IADb;AACmB,IAAA,SAAS,EAAED;AAD9B;AAAA;AAAA;AAAA;AAAA,UAAjB;;AAGA,SAAQA,SAAS,KAAK,MAAf,GAAyBU,UAAzB,GAAsCC,QAA7C;AACH,CAlBD;;KAAMZ,U;AAoBNA,UAAU,CAACa,YAAX,GAA0B;AACtBP,EAAAA,eAAe,EAAE,MAAM,CAAE,CADH;AAEtBF,EAAAA,gBAAgB,EAAE,MAAM,CAAE;AAFJ,CAA1B;AAKAJ,UAAU,CAACc,SAAX,GAAuB;AACnBR,EAAAA,eAAe,EAAEP,QAAQ,CAACgB,IAAT,CAAcC,UADZ;AAEnBZ,EAAAA,gBAAgB,EAAEL,QAAQ,CAACgB,IAAT,CAAcC,UAFb;AAGnBf,EAAAA,SAAS,EAAEF,QAAQ,CAACkB,MAHD;AAInBf,EAAAA,IAAI,EAAEH,QAAQ,CAACkB,MAJI;AAKnBd,EAAAA,KAAK,EAAEJ,QAAQ,CAACkB;AALG,CAAvB;AAQA,eAAejB,UAAf","sourcesContent":["import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport './task-toggle.css';\r\n\r\nconst TaskToggle = ({className, type, value, changeTaskStatus, id, saveEditingTask}) => {\r\n\r\n    function onKeyDownInputFieldHandler(e) {\r\n        if (e.keyCode === 13) return saveEditingTask(id, e)\r\n    };\r\n\r\n    function onClickCheckboxHandler() {\r\n        return changeTaskStatus(id)\r\n    }\r\n\r\n    const inputField = <input onKeyDown={onKeyDownInputFieldHandler}\r\n                              defaultValue={value} type={type}\r\n                              className={className}/>;\r\n\r\n    const checkbox = <input onClick={onClickCheckboxHandler}\r\n                            type={type} className={className}/>;\r\n\r\n    return (className === 'edit') ? inputField : checkbox;\r\n}\r\n\r\nTaskToggle.defaultProps = {\r\n    saveEditingTask: () => {},\r\n    changeTaskStatus: () => {},\r\n}\r\n\r\nTaskToggle.propTypes = {\r\n    saveEditingTask: PropType.func.isRequired,\r\n    changeTaskStatus: PropType.func.isRequired,\r\n    className: PropType.string,\r\n    type: PropType.string,\r\n    value: PropType.string\r\n}\r\n\r\nexport default TaskToggle;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}