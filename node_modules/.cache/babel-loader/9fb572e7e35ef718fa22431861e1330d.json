{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-toogle\\\\task-toggle.js\";\nimport React from 'react';\nimport PropType from 'prop-types';\nimport './task-toggle.css';\n\nconst TaskToggle = ({\n  className,\n  type,\n  value,\n  changeTaskStatus,\n  id,\n  saveEditingTask\n}) => {\n  function onKeyDownInputFieldHandler(e) {\n    if (e.keyCode === 13) return saveEditingTask(id, e);\n  }\n\n  const inputField = /*#__PURE__*/_jsxDEV(\"input\", {\n    onKeyDown: onKeyDownInputFieldHandler,\n    defaultValue: value,\n    type: type,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 28\n  }, this);\n\n  const checkbox = /*#__PURE__*/_jsxDEV(\"input\", {\n    onClick: () => changeTaskStatus(id),\n    type: type,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 27\n  }, this);\n\n  return className === 'edit' ? inputField : checkbox;\n};\n\n_c = TaskToggle;\nTaskToggle.PropType = {\n  onKeyDown: PropType.func,\n  onClick: PropType.func,\n  className: PropType.string,\n  type: PropType.string,\n  defaultValue: PropType.string\n};\nexport default TaskToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskToggle\");","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-toogle/task-toggle.js"],"names":["React","PropType","TaskToggle","className","type","value","changeTaskStatus","id","saveEditingTask","onKeyDownInputFieldHandler","e","keyCode","inputField","checkbox","onKeyDown","func","onClick","string","defaultValue"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,mBAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,KAAlB;AAAwBC,EAAAA,gBAAxB;AAAyCC,EAAAA,EAAzC;AAA4CC,EAAAA;AAA5C,CAAD,KAAgE;AAE3E,WAASC,0BAAT,CAAqCC,CAArC,EAAuC;AAAE,QAAGA,CAAC,CAACC,OAAF,KAAc,EAAjB,EAAqB,OAAOH,eAAe,CAACD,EAAD,EAAIG,CAAJ,CAAtB;AAA6B;;AAE3F,QAAME,UAAU,gBAAG;AAAO,IAAA,SAAS,EAAEH,0BAAlB;AACO,IAAA,YAAY,EAAEJ,KADrB;AAC4B,IAAA,IAAI,EAAED,IADlC;AAEO,IAAA,SAAS,EAAED;AAFlB;AAAA;AAAA;AAAA;AAAA,UAAnB;;AAIA,QAAMU,QAAQ,gBAAI;AAAO,IAAA,OAAO,EAAE,MAAIP,gBAAgB,CAACC,EAAD,CAApC;AACO,IAAA,IAAI,EAAEH,IADb;AACmB,IAAA,SAAS,EAAED;AAD9B;AAAA;AAAA;AAAA;AAAA,UAAlB;;AAGA,SAAUA,SAAS,KAAK,MAAf,GAAyBS,UAAzB,GAAqCC,QAA9C;AACP,CAZD;;KAAMX,U;AAcNA,UAAU,CAACD,QAAX,GAAqB;AACba,EAAAA,SAAS,EAAEb,QAAQ,CAACc,IADP;AAEbC,EAAAA,OAAO,EAAEf,QAAQ,CAACc,IAFL;AAGbZ,EAAAA,SAAS,EAAEF,QAAQ,CAACgB,MAHP;AAIbb,EAAAA,IAAI,EAAEH,QAAQ,CAACgB,MAJF;AAKbC,EAAAA,YAAY,EAAEjB,QAAQ,CAACgB;AALV,CAArB;AAQA,eAAef,UAAf","sourcesContent":["import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport './task-toggle.css';\r\n\r\nconst TaskToggle = ({className, type, value,changeTaskStatus,id,saveEditingTask})=>{\r\n\r\n        function onKeyDownInputFieldHandler (e){ if(e.keyCode === 13) return saveEditingTask(id,e)}\r\n\r\n        const inputField = <input onKeyDown={onKeyDownInputFieldHandler}\r\n                                  defaultValue={value} type={type}\r\n                                  className={className}/>;\r\n\r\n        const checkbox =  <input onClick={()=>changeTaskStatus(id)}\r\n                                 type={type} className={className}/>;\r\n\r\n        return   (className === 'edit') ? inputField: checkbox;\r\n}\r\n\r\nTaskToggle.PropType ={\r\n        onKeyDown: PropType.func,\r\n        onClick: PropType.func,\r\n        className: PropType.string,\r\n        type: PropType.string,\r\n        defaultValue: PropType.string\r\n}\r\n\r\nexport default TaskToggle;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}