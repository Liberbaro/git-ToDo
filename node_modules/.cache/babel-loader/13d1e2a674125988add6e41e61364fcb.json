{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-toogle\\\\task-toggle.js\";\nimport React, { Component } from 'react';\nimport './task-toggle.css';\nexport default class TaskToggle extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      competed: false\n    };\n\n    this.onCompleted = () => {\n      const {\n        id,\n        mainFunction\n      } = this.props;\n      let sassed = false;\n      let newStatus = '';\n\n      if (this.props.mainClass === 'completed') {\n        newStatus = 'completed';\n        sassed = false;\n      } else {\n        newStatus = 'completed';\n        sassed = true;\n      }\n\n      this.setState(({\n        completed\n      }) => {\n        return {\n          completed: sassed\n        };\n      });\n      return mainFunction(id, newStatus);\n    };\n  }\n\n  render() {\n    const {\n      className,\n      type,\n      value\n    } = this.props;\n\n    if (value) {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: value,\n        type: type,\n        className: className\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: this.onCompleted,\n      type: type,\n      className: className\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-toogle/task-toggle.js"],"names":["React","Component","TaskToggle","state","competed","onCompleted","id","mainFunction","props","sassed","newStatus","mainClass","setState","completed","render","className","type","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,mBAAP;AAIA,eAAe,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE9CE,KAF8C,GAEtC;AACJC,MAAAA,QAAQ,EAAE;AADN,KAFsC;;AAAA,SA4B9CC,WA5B8C,GA4BhC,MAAI;AACd,YAAM;AAACC,QAAAA,EAAD;AAAIC,QAAAA;AAAJ,UAAoB,KAAKC,KAA/B;AACA,UAAIC,MAAM,GAAG,KAAb;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,UAAG,KAAKF,KAAL,CAAWG,SAAX,KAAyB,WAA5B,EAAwC;AACpCD,QAAAA,SAAS,GAAG,WAAZ;AACAD,QAAAA,MAAM,GAAG,KAAT;AACH,OAHD,MAIK;AACDC,QAAAA,SAAS,GAAG,WAAZ;AACAD,QAAAA,MAAM,GAAG,IAAT;AACH;;AACD,WAAKG,QAAL,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAgB;AAC1B,eAAQ;AACJA,UAAAA,SAAS,EAAEJ;AADP,SAAR;AAGH,OAJD;AAKA,aAAQF,YAAY,CAACD,EAAD,EAAKI,SAAL,CAApB;AACH,KA9C6C;AAAA;;AAgD9CI,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA;AAAlB,QAA2B,KAAKT,KAAtC;;AACA,QAAGS,KAAH,EAAS;AACL,0BAAQ;AAAO,QAAA,YAAY,EAAEA,KAArB;AAA4B,QAAA,IAAI,EAAED,IAAlC;AAAwC,QAAA,SAAS,EAAED;AAAnD;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;;AACD,wBACI;AAAO,MAAA,OAAO,EAAE,KAAKV,WAArB;AAAmC,MAAA,IAAI,EAAEW,IAAzC;AAA+C,MAAA,SAAS,EAAED;AAA1D;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAxD6C","sourcesContent":["import React, {Component} from 'react'\r\nimport './task-toggle.css'\r\n\r\n\r\n\r\nexport default class TaskToggle extends Component {\r\n\r\n    state = {\r\n        competed: false\r\n    }\r\n\r\n\r\n    // onCompleted = ()=>{\r\n    //     const {id,mainFunction} = this.props;\r\n    //         if(this.props.mainClass === 'completed'){\r\n    //             this.setState(({completed})=> {\r\n    //                 return  {\r\n    //                     completed: true\r\n    //                 }\r\n    //             })\r\n    //             return  mainFunction(id, '')\r\n    //         }\r\n    //         else {\r\n    //             this.setState(({completed})=> {\r\n    //                 return  {\r\n    //                     completed: false\r\n    //                 }\r\n    //             })\r\n    //             return  mainFunction(id, 'completed')\r\n    //         }\r\n    //     }\r\n\r\n\r\n    onCompleted = ()=>{\r\n        const {id,mainFunction} = this.props;\r\n        let sassed = false;\r\n        let newStatus = '';\r\n        if(this.props.mainClass === 'completed'){\r\n            newStatus = 'completed'\r\n            sassed = false;\r\n        }\r\n        else {\r\n            newStatus = 'completed'\r\n            sassed = true;\r\n        }\r\n        this.setState(({completed})=> {\r\n            return  {\r\n                completed: sassed\r\n            }\r\n        })\r\n        return  mainFunction(id, newStatus)\r\n    }\r\n\r\n    render() {\r\n        const {className, type, value} = this.props;\r\n        if(value){\r\n            return  <input defaultValue={value} type={type} className={className}/>\r\n        }\r\n        return (\r\n            <input onClick={this.onCompleted}  type={type} className={className}/>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}