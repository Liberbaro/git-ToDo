{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-status\\\\task-status.js\";\nimport React, { Component } from 'react';\nimport { formatDistance, formatDistanceToNow } from 'date-fns';\nexport default class TaskStatus extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // time: this.props.timeOfCreate,\n      //time: formatDistanceToNow(this.props.timeOfCreate, { includeSeconds: true }),\n      time: formatDistance(this.props.timeOfCreate, {\n        includeSeconds: true\n      })\n    };\n  }\n\n  // update = () => {\n  //     const { timeOfCreate } = this.props;\n  //     this.setState({\n  //         distance: formatDistanceToNow(timeOfCreate, { includeSeconds: true }),\n  //     });\n  // };\n  //\n  // componentDidMount = () => {\n  //     this.timerID = setInterval(() => this.update(), 1000);\n  // };\n  // componentWillUnmount = () => {\n  //     clearTimeout(this.timerID);\n  // };\n  render() {\n    const {\n      className,\n      text,\n      timeOfCreate\n    } = this.props;\n    const {\n      time\n    } = this.state;\n    console.log(timeOfCreate); // let time = formatDistanceToNow(timeOfCreate, {includeSeconds: true}  )\n\n    if (className === 'description') {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: className,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this);\n    } else if (className === 'created') {\n      // const date = .getDay()\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: className,\n        children: [\"  created \", `${time}`, \"  ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-status/task-status.js"],"names":["React","Component","formatDistance","formatDistanceToNow","TaskStatus","state","time","props","timeOfCreate","includeSeconds","render","className","text","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAASC,cAAT,EAAyBC,mBAAzB,QAAoD,UAApD;AAEA,eAAe,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE9CI,KAF8C,GAEtC;AACJ;AACA;AACAC,MAAAA,IAAI,EAAEJ,cAAc,CAAC,KAAKK,KAAL,CAAWC,YAAZ,EAA0B;AAAEC,QAAAA,cAAc,EAAE;AAAlB,OAA1B;AAHhB,KAFsC;AAAA;;AAO9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMAC,EAAAA,MAAM,GAAG;AACT,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA,IAAZ;AAAkBJ,MAAAA;AAAlB,QAAkC,KAAKD,KAA7C;AACC,UAAM;AAACD,MAAAA;AAAD,QAAS,KAAKD,KAApB;AACLQ,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ,EAHa,CAIL;;AACA,QAAGG,SAAS,KAAI,aAAhB,EAA8B;AAC1B,0BAAO;AAAM,QAAA,SAAS,EAAEA,SAAjB;AAAA,kBAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAGK,IAAGD,SAAS,KAAK,SAAjB,EAA4B;AAC7B;AACA,0BAAQ;AAAM,QAAA,SAAS,EAAEA,SAAjB;AAAA,iCAAwC,GAAEL,IAAK,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;AACJ;;AArC6C","sourcesContent":["import React, {Component} from  'react'\r\nimport { formatDistance, formatDistanceToNow } from 'date-fns'\r\n\r\nexport default class TaskStatus extends Component {\r\n\r\n    state = {\r\n        // time: this.props.timeOfCreate,\r\n        //time: formatDistanceToNow(this.props.timeOfCreate, { includeSeconds: true }),\r\n        time: formatDistance(this.props.timeOfCreate, { includeSeconds: true }),\r\n    }\r\n    // update = () => {\r\n    //     const { timeOfCreate } = this.props;\r\n    //     this.setState({\r\n    //         distance: formatDistanceToNow(timeOfCreate, { includeSeconds: true }),\r\n    //     });\r\n    // };\r\n    //\r\n    // componentDidMount = () => {\r\n    //     this.timerID = setInterval(() => this.update(), 1000);\r\n    // };\r\n    // componentWillUnmount = () => {\r\n    //     clearTimeout(this.timerID);\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n    const {className, text, timeOfCreate} = this.props\r\n     const {time} = this.state\r\nconsole.log(timeOfCreate)\r\n        // let time = formatDistanceToNow(timeOfCreate, {includeSeconds: true}  )\r\n        if(className ==='description'){\r\n            return <span className={className} >{text}</span>\r\n        }\r\n        else if(className === 'created') {\r\n            // const date = .getDay()\r\n            return  <span className={className}>  created {`${time}`}  ago</span>\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}