{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-toogle\\\\task-toggle.js\";\nimport React, { Component } from 'react';\nimport './task-toggle.css';\nimport TaskList from \"../task-list/task-list\";\nexport default class TaskToggle extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      competed: false\n    };\n\n    this.onCompleted = () => {\n      if (this.props.label === 'completed') {\n        this.setState(({\n          completed\n        }) => {\n          return {\n            completed: true\n          };\n        });\n        return this.props.testFun(this.props.id, '');\n      } else {\n        this.setState(({\n          completed\n        }) => {\n          return {\n            completed: false\n          };\n        });\n        return this.props.testFun(this.props.id, 'completed');\n      }\n    };\n  }\n\n  render() {\n    const {\n      className,\n      value,\n      type,\n      id,\n      testFun\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: this.onCompleted,\n      type: type,\n      className: className,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n} // const TaskToggle = ({type, className, value}) => {\n//     return <input type={type} className={className} value={value}/>\n//\n// }\n//\n// export default TaskToggle;","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-toogle/task-toggle.js"],"names":["React","Component","TaskList","TaskToggle","state","competed","onCompleted","props","label","setState","completed","testFun","id","render","className","value","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAGA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE9CG,KAF8C,GAEtC;AACJC,MAAAA,QAAQ,EAAE;AADN,KAFsC;;AAAA,SAM9CC,WAN8C,GAMhC,MAAI;AACd,UAAG,KAAKC,KAAL,CAAWC,KAAX,KAAqB,WAAxB,EAAoC;AAChC,aAAKC,QAAL,CAAc,CAAC;AAACC,UAAAA;AAAD,SAAD,KAAgB;AAC3B,iBAAQ;AACHA,YAAAA,SAAS,EAAE;AADR,WAAR;AAGF,SAJD;AAKA,eAAQ,KAAKH,KAAL,CAAWI,OAAX,CAAmB,KAAKJ,KAAL,CAAWK,EAA9B,EAAkC,EAAlC,CAAR;AACH,OAPD,MAOO;AACH,aAAKH,QAAL,CAAc,CAAC;AAACC,UAAAA;AAAD,SAAD,KAAgB;AACtB,iBAAQ;AACJA,YAAAA,SAAS,EAAE;AADP,WAAR;AAGH,SAJL;AAKA,eAAQ,KAAKH,KAAL,CAAWI,OAAX,CAAmB,KAAKJ,KAAL,CAAWK,EAA9B,EAAkC,WAAlC,CAAR;AACC;AACJ,KAtByC;AAAA;;AA2B9CC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA,IAAnB;AAAyBJ,MAAAA,EAAzB;AAA4BD,MAAAA;AAA5B,QAAuC,KAAKJ,KAAlD;AAEA,wBACI;AAAO,MAAA,OAAO,EAAE,KAAKD,WAArB;AAAmC,MAAA,IAAI,EAAEU,IAAzC;AAA+C,MAAA,SAAS,EAAEF,SAA1D;AAAqE,MAAA,KAAK,EAAEC;AAA5E;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAjC6C,C,CAoClD;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react'\r\nimport './task-toggle.css'\r\nimport TaskList from \"../task-list/task-list\";\r\n\r\n\r\nexport default class TaskToggle extends Component {\r\n\r\n    state = {\r\n        competed: false\r\n    }\r\n\r\n    onCompleted = ()=>{\r\n        if(this.props.label === 'completed'){\r\n            this.setState(({completed})=> {\r\n               return  {\r\n                    completed: true\r\n                }\r\n            })\r\n            return  this.props.testFun(this.props.id, '')\r\n        } else {\r\n            this.setState(({completed})=> {\r\n                    return  {\r\n                        completed: false\r\n                    }\r\n                })\r\n            return  this.props.testFun(this.props.id, 'completed')\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const {className, value, type, id,testFun} = this.props\r\n\r\n        return (\r\n            <input onClick={this.onCompleted}  type={type} className={className} value={value}/>\r\n        );\r\n    }\r\n\r\n}\r\n// const TaskToggle = ({type, className, value}) => {\r\n//     return <input type={type} className={className} value={value}/>\r\n//\r\n// }\r\n//\r\n// export default TaskToggle;\r\n\r\n"]},"metadata":{},"sourceType":"module"}