{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-toogle\\\\task-toggle.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './task-toggle.css';\n\nconst TaskToggle = ({\n  className,\n  type,\n  value,\n  id,\n  saveNewTaskValue\n}) => {\n  function onKeyDownInputFieldHandler(e) {\n    return e.keyCode === 13 ? saveNewTaskValue(id, e) : null;\n  }\n\n  console.log(value);\n\n  const inputField = /*#__PURE__*/_jsxDEV(\"input\", {\n    onKeyDown: onKeyDownInputFieldHandler,\n    defaultValue: value,\n    type: type,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n\n  return inputField;\n};\n\n_c = TaskToggle;\nTaskToggle.defaultProps = {\n  saveEditingTask: () => {},\n  changeTaskStatus: () => {},\n  value: null\n};\nTaskToggle.propTypes = {\n  saveEditingTask: PropTypes.func,\n  changeTaskStatus: PropTypes.func,\n  className: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  // value: PropTypes.string,\n  value: PropTypes.objectOf(PropTypes.string)\n};\nexport default TaskToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskToggle\");","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-toogle/task-toggle.jsx"],"names":["React","PropTypes","TaskToggle","className","type","value","id","saveNewTaskValue","onKeyDownInputFieldHandler","e","keyCode","console","log","inputField","defaultProps","saveEditingTask","changeTaskStatus","propTypes","func","string","isRequired","objectOf"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,mBAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,EAA1B;AAA8BC,EAAAA;AAA9B,CAAD,KAAsD;AACvE,WAASC,0BAAT,CAAoCC,CAApC,EAAuC;AACrC,WAAOA,CAAC,CAACC,OAAF,KAAc,EAAd,GAAmBH,gBAAgB,CAACD,EAAD,EAAKG,CAAL,CAAnC,GAA6C,IAApD;AACD;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;;AACA,QAAMQ,UAAU,gBACd;AACE,IAAA,SAAS,EAAEL,0BADb;AAEE,IAAA,YAAY,EAAEH,KAFhB;AAGE,IAAA,IAAI,EAAED,IAHR;AAIE,IAAA,SAAS,EAAED;AAJb;AAAA;AAAA;AAAA;AAAA,UADF;;AAQA,SAAOU,UAAP;AACD,CAfD;;KAAMX,U;AAiBNA,UAAU,CAACY,YAAX,GAA0B;AACxBC,EAAAA,eAAe,EAAE,MAAM,CAAE,CADD;AAExBC,EAAAA,gBAAgB,EAAE,MAAM,CAAE,CAFF;AAGxBX,EAAAA,KAAK,EAAE;AAHiB,CAA1B;AAMAH,UAAU,CAACe,SAAX,GAAuB;AACrBF,EAAAA,eAAe,EAAEd,SAAS,CAACiB,IADN;AAErBF,EAAAA,gBAAgB,EAAEf,SAAS,CAACiB,IAFP;AAGrBf,EAAAA,SAAS,EAAEF,SAAS,CAACkB,MAAV,CAAiBC,UAHP;AAIrBhB,EAAAA,IAAI,EAAEH,SAAS,CAACkB,MAAV,CAAiBC,UAJF;AAKrB;AACAf,EAAAA,KAAK,EAAEJ,SAAS,CAACoB,QAAV,CAAmBpB,SAAS,CAACkB,MAA7B;AANc,CAAvB;AASA,eAAejB,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './task-toggle.css';\n\nconst TaskToggle = ({ className, type, value, id, saveNewTaskValue }) => {\n  function onKeyDownInputFieldHandler(e) {\n    return e.keyCode === 13 ? saveNewTaskValue(id, e) : null;\n  }\n\n  console.log(value);\n  const inputField = (\n    <input\n      onKeyDown={onKeyDownInputFieldHandler}\n      defaultValue={value}\n      type={type}\n      className={className} />\n  );\n\n  return inputField;\n};\n\nTaskToggle.defaultProps = {\n  saveEditingTask: () => {},\n  changeTaskStatus: () => {},\n  value: null,\n};\n\nTaskToggle.propTypes = {\n  saveEditingTask: PropTypes.func,\n  changeTaskStatus: PropTypes.func,\n  className: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  // value: PropTypes.string,\n  value: PropTypes.objectOf(PropTypes.string),\n};\n\nexport default TaskToggle;\n"]},"metadata":{},"sourceType":"module"}