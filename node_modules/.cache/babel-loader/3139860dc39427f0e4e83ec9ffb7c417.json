{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-list\\\\task-list.js\";\nimport React, { Component } from 'react';\nimport TaskListItem from \"../task-list-item/task-list-item\";\nimport './task-list.css';\nimport TaskToggle from \"../task-toogle/task-toggle\";\nexport default class TaskList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listToDo: [{\n        className: 'completed',\n        id: 1\n      }, {\n        className: 'editing',\n        id: 2\n      }, {\n        className: '',\n        id: 3\n      }]\n    };\n\n    this.taskEditing = (id, task) => {\n      this.setState(({\n        listToDo\n      }) => {\n        const newArr = JSON.parse(JSON.stringify(listToDo));\n        const inx = listToDo.findIndex(el => el.id === id);\n\n        if (task == 'del') {\n          newArr.splice(inx, 1);\n        } else {\n          newArr[inx].className = `${task}`;\n        }\n\n        return {\n          listToDo: newArr\n        };\n      });\n    };\n  }\n\n  render() {\n    const taskArr = this.state.listToDo;\n    const taskList = taskArr.map(({\n      className,\n      id\n    }) => {\n      return /*#__PURE__*/_jsxDEV(TaskListItem, {\n        testFun: this.taskEditing,\n        className: className,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-list/task-list.js"],"names":["React","Component","TaskListItem","TaskToggle","TaskList","state","listToDo","className","id","taskEditing","task","setState","newArr","JSON","parse","stringify","inx","findIndex","el","splice","render","taskArr","taskList","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAO,iBAAP;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAGA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAG5CI,KAH4C,GAGpC;AACJC,MAAAA,QAAQ,EAAE,CACN;AAAEC,QAAAA,SAAS,EAAE,WAAb;AAA0BC,QAAAA,EAAE,EAAE;AAA9B,OADM,EAEN;AAAED,QAAAA,SAAS,EAAE,SAAb;AAAwBC,QAAAA,EAAE,EAAG;AAA7B,OAFM,EAGN;AAAED,QAAAA,SAAS,EAAE,EAAb;AAAiBC,QAAAA,EAAE,EAAG;AAAtB,OAHM;AADN,KAHoC;;AAAA,SAa5CC,WAb4C,GAa9B,CAACD,EAAD,EAAKE,IAAL,KAAY;AACtB,WAAKC,QAAL,CAAc,CAAC;AAACL,QAAAA;AAAD,OAAD,KAAc;AACxB,cAAMM,MAAM,GAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeT,QAAf,CAAX,CAAhB;AACA,cAAMU,GAAG,GAAGV,QAAQ,CAACW,SAAT,CAAoBC,EAAD,IAAMA,EAAE,CAACV,EAAH,KAAUA,EAAnC,CAAZ;;AACA,YAAGE,IAAI,IAAI,KAAX,EAAiB;AACbE,UAAAA,MAAM,CAACO,MAAP,CAAcH,GAAd,EAAmB,CAAnB;AACH,SAFD,MAGM;AACFJ,UAAAA,MAAM,CAACI,GAAD,CAAN,CAAYT,SAAZ,GAAyB,GAAEG,IAAK,EAAhC;AACH;;AACD,eAAO;AAAEJ,UAAAA,QAAQ,EAAEM;AAAZ,SAAP;AACH,OAVD;AAWH,KAzB2C;AAAA;;AA6B5CQ,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAI,KAAKhB,KAAL,CAAWC,QAA5B;AACA,UAAMgB,QAAQ,GAAGD,OAAO,CAACE,GAAR,CAAY,CAAC;AAAChB,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,KAAD,KAAmB;AAC5C,0BAAO,QAAC,YAAD;AAAc,QAAA,OAAO,EAAE,KAAKC,WAA5B;AAAyC,QAAA,SAAS,EAAEF,SAApD;AAA+D,QAAA,EAAE,EAAEC;AAAnE;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFgB,CAAjB;AAIA,wBACA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBACKc;AADL;AAAA;AAAA;AAAA;AAAA,YADA;AAKH;;AAxC2C;AAyC/C","sourcesContent":["import React, {Component} from 'react'\r\nimport TaskListItem from \"../task-list-item/task-list-item\";\r\nimport './task-list.css'\r\nimport TaskToggle from \"../task-toogle/task-toggle\";\r\n\r\n\r\nexport default class TaskList extends Component {\r\n\r\n\r\n    state = {\r\n        listToDo: [\r\n            { className: 'completed', id: 1},\r\n            { className: 'editing', id:  2},\r\n            { className: '', id:  3},\r\n        ]\r\n\r\n\r\n}\r\n\r\n    taskEditing = (id, task)=>{\r\n        this.setState(({listToDo})=>{\r\n            const newArr =  JSON.parse(JSON.stringify(listToDo))\r\n            const inx = listToDo.findIndex((el)=>el.id === id)\r\n            if(task == 'del'){\r\n                newArr.splice(inx, 1)\r\n            }\r\n            else  {\r\n                newArr[inx].className = `${task}`\r\n            }\r\n            return { listToDo: newArr}\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const taskArr =  this.state.listToDo;\r\n        const taskList = taskArr.map(({className, id})=>{\r\n            return <TaskListItem testFun={this.taskEditing} className={className} id={id}/>\r\n        })\r\n\r\n        return (\r\n        <ul   className='todo-list'>\r\n            {taskList}\r\n        </ul>\r\n    );\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}