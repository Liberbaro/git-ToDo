{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task\\\\task.js\";\nimport React from 'react';\nimport PropType from 'prop-types';\nimport TaskToggle from '../task-toogle/task-toggle';\nimport TaskButton from '../task-button/task-button';\nimport TaskLabel from '../task-label/task-label';\n\nconst Task = ({\n  className,\n  display,\n  deleteTask,\n  editTaskValue,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: className,\n  style: {\n    display\n  },\n  children: [/*#__PURE__*/_jsxDEV(TaskToggle, {\n    className: \"toggle\",\n    type: \"checkbox\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TaskLabel, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TaskButton, {\n    taskBtnFn: editTaskValue,\n    ...props,\n    className: \"icon icon-edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TaskButton, {\n    taskBtnFn: deleteTask,\n    ...props,\n    className: \"icon icon-destroy\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n\n_c = Task;\nTask.defaultProps = {\n  className: 'view',\n  display: 'block',\n  editTaskValue: () => {},\n  deleteTask: () => {}\n};\nTask.propTypes = {\n  className: PropType.string,\n  type: PropType.string,\n  editTaskValue: PropType.func.isRequired,\n  deleteTask: PropType.func.isRequired\n};\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["D:/project/react/todo/src/components/task/task.js"],"names":["React","PropType","TaskToggle","TaskButton","TaskLabel","Task","className","display","deleteTask","editTaskValue","props","defaultProps","propTypes","string","type","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,SADY;AACDC,EAAAA,OADC;AACQC,EAAAA,UADR;AACoBC,EAAAA,aADpB;AACmC,KAAGC;AADtC,CAAD,kBAGX;AAAK,EAAA,SAAS,EAAEJ,SAAhB;AAA2B,EAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF,GAAlC;AAAA,0BACE,QAAC,UAAD;AAAY,IAAA,SAAS,EAAC,QAAtB;AAA+B,IAAA,IAAI,EAAC,UAApC;AAAA,OAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE,QAAC,UAAD;AAAY,IAAA,SAAS,EAAED,aAAvB;AAAA,OAA0CC,KAA1C;AAAiD,IAAA,SAAS,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,UAHF,eAIE,QAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,UAAvB;AAAA,OAAuCE,KAAvC;AAA8C,IAAA,SAAS,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,UAJF;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;;KAAML,I;AAWNA,IAAI,CAACM,YAAL,GAAoB;AAClBL,EAAAA,SAAS,EAAE,MADO;AAElBC,EAAAA,OAAO,EAAE,OAFS;AAGlBE,EAAAA,aAAa,EAAE,MAAM,CAAE,CAHL;AAIlBD,EAAAA,UAAU,EAAE,MAAM,CAAE;AAJF,CAApB;AAMAH,IAAI,CAACO,SAAL,GAAiB;AACfN,EAAAA,SAAS,EAAEL,QAAQ,CAACY,MADL;AAEfC,EAAAA,IAAI,EAAEb,QAAQ,CAACY,MAFA;AAGfJ,EAAAA,aAAa,EAAER,QAAQ,CAACc,IAAT,CAAcC,UAHd;AAIfR,EAAAA,UAAU,EAAEP,QAAQ,CAACc,IAAT,CAAcC;AAJX,CAAjB;AAOA,eAAeX,IAAf","sourcesContent":["import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport TaskToggle from '../task-toogle/task-toggle';\r\nimport TaskButton from '../task-button/task-button';\r\nimport TaskLabel from '../task-label/task-label';\r\n\r\nconst Task = ({\n  className, display, deleteTask, editTaskValue, ...props\n}) => (\n  <div className={className} style={{ display }}>\r\n    <TaskToggle className=\"toggle\" type=\"checkbox\" {...props} />\r\n    <TaskLabel {...props} />\r\n    <TaskButton taskBtnFn={editTaskValue} {...props} className=\"icon icon-edit\" />\r\n    <TaskButton taskBtnFn={deleteTask} {...props} className=\"icon icon-destroy\" />\r\n  </div>\n);\r\n\r\nTask.defaultProps = {\r\n  className: 'view',\r\n  display: 'block',\r\n  editTaskValue: () => {},\r\n  deleteTask: () => {},\r\n};\r\nTask.propTypes = {\r\n  className: PropType.string,\r\n  type: PropType.string,\r\n  editTaskValue: PropType.func.isRequired,\r\n  deleteTask: PropType.func.isRequired,\r\n};\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}