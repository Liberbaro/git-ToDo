{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport Header from \"../header/header\";\nimport Main from \"../main/main\";\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxID = 666;\n    this.countLeft = {};\n    this.state = {\n      listToDo: [this.createNewTask('Completed'), this.createNewTask('Editing'), this.createNewTask('Active')]\n    };\n\n    this.changeStatus = id => {\n      console.log(this.state.listToDo.length);\n      this.setState(({\n        listToDo\n      }) => {\n        const newList = this.getNewListToDo();\n        const inx = this.getIndex(id);\n        newList[inx].className === '' ? newList[inx].className = 'completed' : newList[inx].className = '';\n        return {\n          listToDo: newList\n        };\n      });\n    };\n\n    this.deleteTask = id => {\n      this.setState(({\n        listToDo\n      }) => {\n        const newList = this.getNewListToDo();\n        const inx = this.getIndex(id);\n        newList.splice(inx, 1);\n        return {\n          listToDo: newList\n        };\n      });\n    };\n\n    this.editingTask = id => {\n      this.setState(({\n        listToDo\n      }) => {\n        const newList = this.getNewListToDo();\n        const inx = this.getIndex(id);\n        newList[inx].className = 'editing';\n        return {\n          listToDo: newList\n        };\n      });\n    };\n\n    this.editTask = (id, event) => {\n      if (event.keyCode == 13) {\n        this.setState(({\n          listToDo\n        }) => {\n          const val = event.target.value;\n          const newList = this.getNewListToDo();\n          const inx = this.getIndex(id);\n          newList[inx].text = val;\n          newList[inx].className = '';\n          return {\n            listToDo: newList\n          };\n        });\n      }\n    };\n  }\n\n  createNewTask(text) {\n    return {\n      text: text,\n      className: '',\n      id: this.maxID++\n    };\n  } // addElement =()=>{\n  //     this.setState(({listToDo})=>{\n  //         const newArr =  JSON.parse(JSON.stringify(listToDo))\n  //         const newElement = this.createNewTask('random')\n  //         newArr.unshift(newElement)\n  //         return  {\n  //             listToDo: newArr\n  //         }\n  //     })\n  // }\n\n\n  getIndex(id) {\n    return this.state.listToDo.findIndex(el => el.id === id);\n  }\n\n  getNewListToDo() {\n    return JSON.parse(JSON.stringify(this.state.listToDo));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        addElement: this.addElement,\n        changeStatus: this.changeStatus,\n        taskEditing: this.taskEditing,\n        createNewTask: this.createNewTask,\n        taskList: this.state.listToDo,\n        editingTask: this.editingTask,\n        deleteTask: this.deleteTask,\n        editTask: this.editTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/project/react/todo/src/components/app/app.js"],"names":["React","Component","Header","Main","App","maxID","countLeft","state","listToDo","createNewTask","changeStatus","id","console","log","length","setState","newList","getNewListToDo","inx","getIndex","className","deleteTask","splice","editingTask","editTask","event","keyCode","val","target","value","text","findIndex","el","JSON","parse","stringify","render","addElement","taskEditing"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Header from \"../header/header\";\r\nimport Main from \"../main/main\";\r\nimport './app.css'\r\n\r\nexport default class App extends Component{\r\n\r\n    maxID = 666;\r\n    countLeft = { }\r\n    state = {\r\n        listToDo: [\r\n            this.createNewTask('Completed'),\r\n            this.createNewTask('Editing'),\r\n            this.createNewTask('Active'),\r\n        ]\r\n    }\r\n\r\n    createNewTask (text){\r\n        return {\r\n            text: text,\r\n            className: '',\r\n            id:  this.maxID++\r\n        }\r\n    }\r\n\r\n\r\n    // addElement =()=>{\r\n    //     this.setState(({listToDo})=>{\r\n    //         const newArr =  JSON.parse(JSON.stringify(listToDo))\r\n    //         const newElement = this.createNewTask('random')\r\n    //         newArr.unshift(newElement)\r\n    //         return  {\r\n    //             listToDo: newArr\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    getIndex (id){\r\n           return this.state.listToDo.findIndex((el)=>el.id === id)\r\n    }\r\n\r\n    getNewListToDo (){\r\n        return JSON.parse(JSON.stringify(this.state.listToDo))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    changeStatus= (id)=>{\r\n        console.log(this.state.listToDo.length)\r\n        this.setState(({listToDo})=>{\r\n            const newList = this.getNewListToDo();\r\n            const inx = this.getIndex(id)\r\n            newList[inx].className === ''?  newList[inx].className = 'completed': newList[inx].className = '';\r\n            return {\r\n                listToDo: newList\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteTask =(id)=>{\r\n        this.setState(({listToDo})=>{\r\n            const newList = this.getNewListToDo();\r\n            const inx = this.getIndex(id)\r\n            newList.splice(inx, 1)\r\n            return {\r\n                listToDo: newList\r\n            }\r\n        })\r\n    }\r\n\r\n    editingTask= (id)=>{\r\n        this.setState(({listToDo})=>{\r\n            const newList = this.getNewListToDo();\r\n            const inx = this.getIndex(id)\r\n           newList[inx].className = 'editing';\r\n\r\n            return {\r\n                listToDo: newList\r\n            }\r\n        })\r\n    }\r\n\r\n    editTask =(id,event)=>{\r\n        if(event.keyCode == 13){\r\n         this.setState(({listToDo})=>{\r\n             const val = event.target.value\r\n             const newList = this.getNewListToDo();\r\n             const inx = this.getIndex(id)\r\n             newList[inx].text = val\r\n             newList[inx].className = '';\r\n             return {\r\n                 listToDo: newList\r\n             }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n    return (\r\n        <section className='todoapp'>\r\n            <Header/>\r\n            <Main addElement={this.addElement}\r\n                  changeStatus={this.changeStatus}\r\n                  taskEditing={this.taskEditing}\r\n                  createNewTask={this.createNewTask}\r\n                  taskList={this.state.listToDo}\r\n                  editingTask={this.editingTask}\r\n                  deleteTask={this.deleteTask}\r\n                  editTask={this.editTask}/>\r\n        </section>\r\n    );\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}