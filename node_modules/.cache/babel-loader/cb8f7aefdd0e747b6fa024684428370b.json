{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-label\\\\task-label.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNow } from 'date-fns';\nexport default class TaskLabel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.timeOfCreate = this.props.timeOfCreate;\n    this.timeAfterCreations = formatDistanceToNow(this.timeOfCreate, {\n      includeSeconds: true\n    });\n    this.state = {\n      time: formatDistanceToNow(this.props.timeOfCreate, {\n        includeSeconds: true\n      })\n    };\n\n    this.tick = () => {\n      const {\n        timeOfCreate\n      } = this.props,\n            date = formatDistanceToNow(timeOfCreate, {\n        includeSeconds: true\n      });\n      this.setState({\n        time: date\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.intervalID = setInterval(() => this.tick(), 1000);\n    };\n\n    this.componentWillUnmount = () => {\n      clearInterval(this.intervalID);\n    };\n  }\n\n  render() {\n    const {\n      text\n    } = this.props,\n          {\n      time\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"description\",\n        children: [\" \", text, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"created\",\n        children: [\" created \", `${time}`, \" ago \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nTaskLabel.propTypes = {\n  timeOfCreate: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-label/task-label.jsx"],"names":["React","Component","PropTypes","formatDistanceToNow","TaskLabel","timeOfCreate","props","timeAfterCreations","includeSeconds","state","time","tick","date","setState","componentDidMount","intervalID","setInterval","componentWillUnmount","clearInterval","render","text","propTypes","number","isRequired","string"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,mBAAT,QAAoC,UAApC;AAEA,eAAe,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAO/CI,YAP+C,GAOhC,KAAKC,KAAL,CAAWD,YAPqB;AAAA,SAU/CE,kBAV+C,GAU1BJ,mBAAmB,CAAC,KAAKE,YAAN,EAAoB;AAAEG,MAAAA,cAAc,EAAE;AAAlB,KAApB,CAVO;AAAA,SAa/CC,KAb+C,GAavC;AAAEC,MAAAA,IAAI,EAAEP,mBAAmB,CAAC,KAAKG,KAAL,CAAWD,YAAZ,EAA0B;AAAEG,QAAAA,cAAc,EAAE;AAAlB,OAA1B;AAA3B,KAbuC;;AAAA,SAe/CG,IAf+C,GAexC,MAAM;AACX,YAAM;AAAEN,QAAAA;AAAF,UAAmB,KAAKC,KAA9B;AAAA,YACMM,IAAI,GAAGT,mBAAmB,CAACE,YAAD,EAAe;AAAEG,QAAAA,cAAc,EAAE;AAAlB,OAAf,CADhC;AAEA,WAAKK,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAEE;AAAR,OAAd;AACD,KAnB8C;;AAAA,SAqB/CE,iBArB+C,GAqB3B,MAAM;AACxB,WAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM,KAAKL,IAAL,EAAP,EAAoB,IAApB,CAA7B;AACD,KAvB8C;;AAAA,SAyB/CM,oBAzB+C,GAyBxB,MAAM;AAC3BC,MAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACD,KA3B8C;AAAA;;AA6B/CI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKd,KAAtB;AAAA,UACM;AAAEI,MAAAA;AAAF,QAAW,KAAKD,KADtB;AAEA,wBACE;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,wBAAgCW,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA,gCAAqC,GAAEV,IAAK,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAtC8C;AAA5BN,S,CACZiB,S,GAAY;AACjBhB,EAAAA,YAAY,EAAEH,SAAS,CAACoB,MAAV,CAAiBC,UADd;AAEjBH,EAAAA,IAAI,EAAElB,SAAS,CAACsB,MAAV,CAAiBD;AAFN,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNow } from 'date-fns';\n\nexport default class TaskLabel extends Component {\n  static propTypes = {\n    timeOfCreate: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n  };\n\n  // eslint-disable-next-line react/destructuring-assignment\n  timeOfCreate = this.props.timeOfCreate;\n\n  // eslint-disable-next-line no-undef\n  timeAfterCreations = formatDistanceToNow(this.timeOfCreate, { includeSeconds: true });\n\n  // eslint-disable-next-line react/destructuring-assignment\n  state = { time: formatDistanceToNow(this.props.timeOfCreate, { includeSeconds: true }) };\n\n  tick = () => {\n    const { timeOfCreate } = this.props,\n          date = formatDistanceToNow(timeOfCreate, { includeSeconds: true });\n    this.setState({ time: date });\n  };\n\n  componentDidMount = () => {\n    this.intervalID = setInterval(() => this.tick(), 1000);\n  };\n\n  componentWillUnmount = () => {\n    clearInterval(this.intervalID);\n  };\n\n  render() {\n    const { text } = this.props,\n          { time } = this.state;\n    return (\n      <label>\n        <span className=\"description\"> {text} </span>\n        <span className=\"created\"> created {`${time}`} ago </span>\n      </label>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}