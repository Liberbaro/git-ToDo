{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-filter\\\\task-filter.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FilterButton from '../filter-button/filter-button';\nimport './task-filter.css';\nexport default class TaskFilter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.key = 1;\n    this.state = {\n      filtersList: [{\n        label: 'All',\n        className: 'selected',\n        key: 10,\n        mainClass: 'all'\n      }, {\n        label: 'Active',\n        className: '',\n        key: 20,\n        mainClass: ''\n      }, {\n        label: 'Completed',\n        className: '',\n        key: 30,\n        mainClass: 'completed'\n      }]\n    };\n\n    this.changeSelectedFilter = label => {\n      const {\n        selectTaskFilter\n      } = this.props;\n      this.setState(({\n        filtersList\n      }) => {\n        const newFilterList = filtersList.map(el => {\n          el.className = el.label === label ? 'selected' : '';\n\n          if (el.className === 'selected') {\n            selectTaskFilter(el.mainClass);\n          }\n\n          return el;\n        });\n        return {\n          filter: newFilterList\n        };\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.intervalID = setInterval(() => this.forceUpdate(this.changeSelectedFilter()), 1000);\n    };\n\n    this.componentWillUnmount = () => {\n      clearInterval(this.intervalID);\n    };\n  }\n\n  render() {\n    const {\n      filtersList\n    } = this.state,\n          filterItem = filtersList.map(({ ...item\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClickTaskFilterBtnHandler: this.changeSelectedFilter,\n          ...item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, this.key++, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"filters\",\n      children: filterItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nTaskFilter.propTypes = {\n  selectTaskFilter: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-filter/task-filter.jsx"],"names":["React","Component","PropTypes","FilterButton","TaskFilter","key","state","filtersList","label","className","mainClass","changeSelectedFilter","selectTaskFilter","props","setState","newFilterList","map","el","filter","componentDidMount","intervalID","setInterval","forceUpdate","componentWillUnmount","clearInterval","render","filterItem","item","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAO,mBAAP;AAEA,eAAe,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAGhDI,GAHgD,GAG1C,CAH0C;AAAA,SAKhDC,KALgD,GAKxC;AACNC,MAAAA,WAAW,EAAE,CACX;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,SAAS,EAAE,UAA3B;AAAuCJ,QAAAA,GAAG,EAAE,EAA5C;AAAgDK,QAAAA,SAAS,EAAE;AAA3D,OADW,EAEX;AAAEF,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,SAAS,EAAE,EAA9B;AAAkCJ,QAAAA,GAAG,EAAE,EAAvC;AAA2CK,QAAAA,SAAS,EAAE;AAAtD,OAFW,EAGX;AAAEF,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,SAAS,EAAE,EAAjC;AAAqCJ,QAAAA,GAAG,EAAE,EAA1C;AAA8CK,QAAAA,SAAS,EAAE;AAAzD,OAHW;AADP,KALwC;;AAAA,SAahDC,oBAbgD,GAaxBH,KAAD,IAAW;AAChC,YAAM;AAAEI,QAAAA;AAAF,UAAuB,KAAKC,KAAlC;AACA,WAAKC,QAAL,CAAc,CAAC;AAAEP,QAAAA;AAAF,OAAD,KAAqB;AACjC,cAAMQ,aAAa,GAAGR,WAAW,CAACS,GAAZ,CAAiBC,EAAD,IAAQ;AAC5CA,UAAAA,EAAE,CAACR,SAAH,GAAeQ,EAAE,CAACT,KAAH,KAAaA,KAAb,GAAqB,UAArB,GAAkC,EAAjD;;AACA,cAAIS,EAAE,CAACR,SAAH,KAAiB,UAArB,EAAiC;AAC/BG,YAAAA,gBAAgB,CAACK,EAAE,CAACP,SAAJ,CAAhB;AACD;;AACD,iBAAOO,EAAP;AACD,SANqB,CAAtB;AAOA,eAAO;AAAEC,UAAAA,MAAM,EAAEH;AAAV,SAAP;AACD,OATD;AAUD,KAzB+C;;AAAA,SA2BhDI,iBA3BgD,GA2B5B,MAAM;AACxB,WAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM,KAAKC,WAAL,CAAiB,KAAKX,oBAAL,EAAjB,CAAP,EAAsD,IAAtD,CAA7B;AACD,KA7B+C;;AAAA,SA+BhDY,oBA/BgD,GA+BzB,MAAM;AAC3BC,MAAAA,aAAa,CAAC,KAAKJ,UAAN,CAAb;AACD,KAjC+C;AAAA;;AAmChDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElB,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AAAA,UACMoB,UAAU,GAAGnB,WAAW,CAACS,GAAZ,CAAgB,CAAC,EAAE,GAAGW;AAAL,KAAD,KAAiB;AAC5C,0BACE;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,2BAA2B,EAAE,KAAKhB,oBADpC;AAAA,aAEMgB;AAFN;AAAA;AAAA;AAAA;AAAA;AADF,SAAS,KAAKtB,GAAL,EAAT;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATY,CADnB;AAWA,wBAAO;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA,gBAAyBqB;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAhD+C;AAA7BtB,U,CACZwB,S,GAAY;AAAEhB,EAAAA,gBAAgB,EAAEV,SAAS,CAAC2B,IAAV,CAAeC;AAAnC,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FilterButton from '../filter-button/filter-button';\nimport './task-filter.css';\n\nexport default class TaskFilter extends Component {\n  static propTypes = { selectTaskFilter: PropTypes.func.isRequired };\n\n  key = 1;\n\n  state = {\n    filtersList: [\n      { label: 'All', className: 'selected', key: 10, mainClass: 'all' },\n      { label: 'Active', className: '', key: 20, mainClass: '' },\n      { label: 'Completed', className: '', key: 30, mainClass: 'completed' },\n    ],\n  };\n\n  changeSelectedFilter = (label) => {\n    const { selectTaskFilter } = this.props;\n    this.setState(({ filtersList }) => {\n      const newFilterList = filtersList.map((el) => {\n        el.className = el.label === label ? 'selected' : '';\n        if (el.className === 'selected') {\n          selectTaskFilter(el.mainClass);\n        }\n        return el;\n      });\n      return { filter: newFilterList };\n    });\n  };\n\n  componentDidMount = () => {\n    this.intervalID = setInterval(() => this.forceUpdate(this.changeSelectedFilter()), 1000);\n  };\n\n  componentWillUnmount = () => {\n    clearInterval(this.intervalID);\n  };\n\n  render() {\n    const { filtersList } = this.state,\n          filterItem = filtersList.map(({ ...item }) => {\n            return (\n              <li key={this.key++}>\n                <FilterButton\n                  onClickTaskFilterBtnHandler={this.changeSelectedFilter}\n                  {...item}\n                />\n              </li>\n            );\n          });\n    return <ul className=\"filters\">{filterItem}</ul>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}