{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-toogle\\\\task-toggle.js\";\nimport React, { Component } from 'react';\nimport './task-toggle.css';\nexport default class TaskToggle extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n\n    this.editTask = event => {\n      console.log(event.target.value);\n      const val = event.target.value;\n\n      if (event.keyCode == 13) {\n        console.log('asa');\n        this.setState(state => {\n          return state = {\n            value: val\n          };\n        });\n        console.log(this.state);\n      }\n    };\n  }\n\n  render() {\n    const {\n      className,\n      type,\n      value,\n      changeStatus,\n      id\n    } = this.props;\n\n    let inputField = /*#__PURE__*/_jsxDEV(\"input\", {\n      onKeyDown: event => {\n        this.editTask(event);\n      },\n      defaultValue: this.state.value,\n      type: type,\n      className: className\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }, this);\n\n    let checkbox = /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: () => changeStatus(id),\n      type: type,\n      className: className\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this);\n\n    return value ? inputField : checkbox;\n  }\n\n} // if(value){\n//     return  <input onChange={(event)=>{this.editTask(event)}}\n//                    defaultValue={value} type={type} className={className}/>\n// }\n// return (\n//     <input onClick={()=>changeStatus(id)}  type={type} className={className}/>\n// );\n// onCompleted = ()=>{\n//     const {id,mainFunction} = this.props;\n//         if(this.props.mainClass === 'completed'){\n//             this.setState(({completed})=> {\n//                 return  {\n//                     completed: true\n//                 }\n//             })\n//             return  mainFunction(id, '')\n//         }\n//         else {\n//             this.setState(({completed})=> {\n//                 return  {\n//                     completed: false\n//                 }\n//             })\n//             return  mainFunction(id, 'completed')\n//         }\n//     }","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-toogle/task-toggle.js"],"names":["React","Component","TaskToggle","state","value","editTask","event","console","log","target","val","keyCode","setState","render","className","type","changeStatus","id","props","inputField","checkbox"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,mBAAP;AAIA,eAAe,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE9CE,KAF8C,GAEtC;AACJC,MAAAA,KAAK,EAAE;AADH,KAFsC;;AAAA,SAO9CC,QAP8C,GAOnCC,KAAD,IAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaL,KAAzB;AAEA,YAAMM,GAAG,GAAGJ,KAAK,CAACG,MAAN,CAAaL,KAAzB;;AACA,UAAGE,KAAK,CAACK,OAAN,IAAiB,EAApB,EAAuB;AACnBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,aAAKI,QAAL,CAAcT,KAAK,IAAG;AAClB,iBAAOA,KAAK,GAAG;AACPC,YAAAA,KAAK,EAAEM;AADA,WAAf;AAIH,SALD;AAMAH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACH;AACJ,KArB6C;AAAA;;AAwB9CU,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA,IAAZ;AAAkBX,MAAAA,KAAlB;AAAwBY,MAAAA,YAAxB;AAAqCC,MAAAA;AAArC,QAA2C,KAAKC,KAAtD;;AAEA,QAAIC,UAAU,gBAAG;AAAO,MAAA,SAAS,EAAGb,KAAD,IAAS;AAAE,aAAKD,QAAL,CAAcC,KAAd,CAAD;AAAuB,OAAnD;AACO,MAAA,YAAY,EAAE,KAAKH,KAAL,CAAWC,KADhC;AACuC,MAAA,IAAI,EAAEW,IAD7C;AACmD,MAAA,SAAS,EAAED;AAD9D;AAAA;AAAA;AAAA;AAAA,YAAjB;;AAEA,QAAIM,QAAQ,gBAAI;AAAO,MAAA,OAAO,EAAE,MAAIJ,YAAY,CAACC,EAAD,CAAhC;AAAuC,MAAA,IAAI,EAAEF,IAA7C;AAAmD,MAAA,SAAS,EAAED;AAA9D;AAAA;AAAA;AAAA;AAAA,YAAhB;;AACA,WAAQV,KAAD,GAASe,UAAT,GAAsBC,QAA7B;AACH;;AA/B6C,C,CAmClD;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react'\r\nimport './task-toggle.css'\r\n\r\n\r\n\r\nexport default class TaskToggle extends Component {\r\n\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n\r\n    editTask =(event)=>{\r\n        console.log(event.target.value)\r\n\r\n        const val = event.target.value\r\n        if(event.keyCode == 13){\r\n            console.log('asa')\r\n            this.setState(state =>{\r\n                return state = {\r\n                        value: val\r\n                }\r\n\r\n            })\r\n            console.log(this.state)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {className, type, value,changeStatus,id} = this.props;\r\n\r\n        let inputField = <input onKeyDown={(event)=>{(this.editTask(event))}}\r\n                                defaultValue={this.state.value} type={type} className={className}/>;\r\n        let checkbox =  <input onClick={()=>changeStatus(id)}  type={type} className={className}/>;\r\n        return (value)? inputField : checkbox;\r\n    }\r\n\r\n}\r\n\r\n// if(value){\r\n//     return  <input onChange={(event)=>{this.editTask(event)}}\r\n//                    defaultValue={value} type={type} className={className}/>\r\n// }\r\n// return (\r\n//     <input onClick={()=>changeStatus(id)}  type={type} className={className}/>\r\n// );\r\n\r\n\r\n\r\n\r\n// onCompleted = ()=>{\r\n//     const {id,mainFunction} = this.props;\r\n//         if(this.props.mainClass === 'completed'){\r\n//             this.setState(({completed})=> {\r\n//                 return  {\r\n//                     completed: true\r\n//                 }\r\n//             })\r\n//             return  mainFunction(id, '')\r\n//         }\r\n//         else {\r\n//             this.setState(({completed})=> {\r\n//                 return  {\r\n//                     completed: false\r\n//                 }\r\n//             })\r\n//             return  mainFunction(id, 'completed')\r\n//         }\r\n//     }\r\n"]},"metadata":{},"sourceType":"module"}