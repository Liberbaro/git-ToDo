{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-toogle\\\\task-toggle.js\";\nimport React from 'react';\nimport PropType from 'prop-types';\nimport './task-toggle.css';\n\nconst TaskToggle = ({\n  className,\n  type,\n  value,\n  changeTaskStatus,\n  id,\n  saveEditingTask\n}) => {\n  function onKeyDownInputFieldHandler(e) {\n    if (e.keyCode === 13) return saveEditingTask(id, e);\n  }\n\n  function onClickCheckboxHandler() {\n    return changeTaskStatus(id);\n  }\n\n  const inputField = /*#__PURE__*/_jsxDEV(\"input\", {\n    onKeyDown: onKeyDownInputFieldHandler,\n    defaultValue: value,\n    type: type,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n\n  const checkbox = /*#__PURE__*/_jsxDEV(\"input\", {\n    onClick: onClickCheckboxHandler,\n    type: type,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n\n  return className === 'edit' ? inputField : checkbox;\n};\n\n_c = TaskToggle;\nTaskToggle.defaultProps = {\n  saveEditingTask: () => {},\n  changeTaskStatus: () => {}\n};\nTaskToggle.propTypes = {\n  saveEditingTask: PropType.func.isRequired,\n  changeTaskStatus: PropType.func.isRequired,\n  className: PropType.string,\n  type: PropType.string,\n  value: PropType.string\n};\nexport default TaskToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskToggle\");","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-toogle/task-toggle.js"],"names":["React","PropType","TaskToggle","className","type","value","changeTaskStatus","id","saveEditingTask","onKeyDownInputFieldHandler","e","keyCode","onClickCheckboxHandler","inputField","checkbox","defaultProps","propTypes","func","isRequired","string"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,mBAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,SADkB;AACPC,EAAAA,IADO;AACDC,EAAAA,KADC;AACMC,EAAAA,gBADN;AACwBC,EAAAA,EADxB;AAC4BC,EAAAA;AAD5B,CAAD,KAEb;AACJ,WAASC,0BAAT,CAAoCC,CAApC,EAAuC;AACrC,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB,OAAOH,eAAe,CAACD,EAAD,EAAKG,CAAL,CAAtB;AACvB;;AAED,WAASE,sBAAT,GAAkC;AAChC,WAAON,gBAAgB,CAACC,EAAD,CAAvB;AACD;;AAED,QAAMM,UAAU,gBACd;AACE,IAAA,SAAS,EAAEJ,0BADb;AAEE,IAAA,YAAY,EAAEJ,KAFhB;AAGE,IAAA,IAAI,EAAED,IAHR;AAIE,IAAA,SAAS,EAAED;AAJb;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,QAAMW,QAAQ,gBACZ;AACE,IAAA,OAAO,EAAEF,sBADX;AAEE,IAAA,IAAI,EAAER,IAFR;AAGE,IAAA,SAAS,EAAED;AAHb;AAAA;AAAA;AAAA;AAAA,UADF;;AAQA,SAAQA,SAAS,KAAK,MAAf,GAAyBU,UAAzB,GAAsCC,QAA7C;AACD,CA7BD;;KAAMZ,U;AA+BNA,UAAU,CAACa,YAAX,GAA0B;AACxBP,EAAAA,eAAe,EAAE,MAAM,CAAE,CADD;AAExBF,EAAAA,gBAAgB,EAAE,MAAM,CAAE;AAFF,CAA1B;AAKAJ,UAAU,CAACc,SAAX,GAAuB;AACrBR,EAAAA,eAAe,EAAEP,QAAQ,CAACgB,IAAT,CAAcC,UADV;AAErBZ,EAAAA,gBAAgB,EAAEL,QAAQ,CAACgB,IAAT,CAAcC,UAFX;AAGrBf,EAAAA,SAAS,EAAEF,QAAQ,CAACkB,MAHC;AAIrBf,EAAAA,IAAI,EAAEH,QAAQ,CAACkB,MAJM;AAKrBd,EAAAA,KAAK,EAAEJ,QAAQ,CAACkB;AALK,CAAvB;AAQA,eAAejB,UAAf","sourcesContent":["import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport './task-toggle.css';\r\n\r\nconst TaskToggle = ({\n  className, type, value, changeTaskStatus, id, saveEditingTask,\n}) => {\n  function onKeyDownInputFieldHandler(e) {\r\n    if (e.keyCode === 13) return saveEditingTask(id, e);\r\n  }\r\n\r\n  function onClickCheckboxHandler() {\r\n    return changeTaskStatus(id);\r\n  }\r\n\r\n  const inputField = (\n    <input\n      onKeyDown={onKeyDownInputFieldHandler}\r\n      defaultValue={value}\n      type={type}\r\n      className={className}\n    />\n  );\r\n\r\n  const checkbox = (\n    <input\n      onClick={onClickCheckboxHandler}\r\n      type={type}\n      className={className}\n    />\n  );\r\n\r\n  return (className === 'edit') ? inputField : checkbox;\r\n};\r\n\r\nTaskToggle.defaultProps = {\r\n  saveEditingTask: () => {},\r\n  changeTaskStatus: () => {},\r\n};\r\n\r\nTaskToggle.propTypes = {\r\n  saveEditingTask: PropType.func.isRequired,\r\n  changeTaskStatus: PropType.func.isRequired,\r\n  className: PropType.string,\r\n  type: PropType.string,\r\n  value: PropType.string,\r\n};\r\n\r\nexport default TaskToggle;\r\n"]},"metadata":{},"sourceType":"module"}