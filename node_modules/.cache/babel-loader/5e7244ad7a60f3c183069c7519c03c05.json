{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task\\\\task.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TaskToggle from '../task-toogle/task-toggle';\nimport TaskButton from '../task-button/task-button';\nimport TaskLabel from '../task-label/task-label';\n\nconst Task = ({\n  className,\n  display,\n  deleteTask,\n  editTaskValue,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    style: {\n      display\n    },\n    children: [/*#__PURE__*/_jsxDEV(TaskToggle, {\n      className: \"toggle\",\n      type: \"checkbox\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskLabel, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskButton, {\n      taskBtnFn: editTaskValue,\n      ...props,\n      className: \"icon icon-edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskButton, {\n      taskBtnFn: deleteTask,\n      ...props,\n      className: \"icon icon-destroy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Task;\nTask.defaultProps = {\n  className: 'view',\n  display: 'block',\n  editTaskValue: () => {},\n  deleteTask: () => {}\n};\nTask.propTypes = {\n  className: PropTypes.string,\n  display: PropTypes.string,\n  editTaskValue: PropTypes.func,\n  deleteTask: PropTypes.func\n};\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["D:/project/react/todo/src/components/task/task.jsx"],"names":["React","PropTypes","TaskToggle","TaskButton","TaskLabel","Task","className","display","deleteTask","editTaskValue","props","defaultProps","propTypes","string","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA,aAAlC;AAAiD,KAAGC;AAApD,CAAD,KAAiE;AAC5E,sBACE;AAAK,IAAA,SAAS,EAAEJ,SAAhB;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KAAlC;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,QAAtB;AAA+B,MAAA,IAAI,EAAC,UAApC;AAAA,SAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAED,aAAvB;AAAA,SAA0CC,KAA1C;AAAiD,MAAA,SAAS,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEF,UAAvB;AAAA,SAAuCE,KAAvC;AAA8C,MAAA,SAAS,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;KAAML,I;AAWNA,IAAI,CAACM,YAAL,GAAoB;AAClBL,EAAAA,SAAS,EAAE,MADO;AAElBC,EAAAA,OAAO,EAAE,OAFS;AAGlBE,EAAAA,aAAa,EAAE,MAAM,CAAE,CAHL;AAIlBD,EAAAA,UAAU,EAAE,MAAM,CAAE;AAJF,CAApB;AAMAH,IAAI,CAACO,SAAL,GAAiB;AACfN,EAAAA,SAAS,EAAEL,SAAS,CAACY,MADN;AAEfN,EAAAA,OAAO,EAAEN,SAAS,CAACY,MAFJ;AAGfJ,EAAAA,aAAa,EAAER,SAAS,CAACa,IAHV;AAIfN,EAAAA,UAAU,EAAEP,SAAS,CAACa;AAJP,CAAjB;AAOA,eAAeT,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport TaskToggle from '../task-toogle/task-toggle';\nimport TaskButton from '../task-button/task-button';\nimport TaskLabel from '../task-label/task-label';\n\nconst Task = ({ className, display, deleteTask, editTaskValue, ...props }) => {\n  return (\n    <div className={className} style={{ display }}>\n      <TaskToggle className=\"toggle\" type=\"checkbox\" {...props} />\n      <TaskLabel {...props} />\n      <TaskButton taskBtnFn={editTaskValue} {...props} className=\"icon icon-edit\" />\n      <TaskButton taskBtnFn={deleteTask} {...props} className=\"icon icon-destroy\"/>\n    </div>\n  );\n};\n\nTask.defaultProps = {\n  className: 'view',\n  display: 'block',\n  editTaskValue: () => {},\n  deleteTask: () => {},\n};\nTask.propTypes = {\n  className: PropTypes.string,\n  display: PropTypes.string,\n  editTaskValue: PropTypes.func,\n  deleteTask: PropTypes.func,\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}