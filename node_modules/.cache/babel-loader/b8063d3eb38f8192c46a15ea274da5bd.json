{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-label\\\\task-label.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNow } from 'date-fns';\nexport default class TaskLabel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      time: formatDistanceToNow(this.props.timeOfCreate, {\n        includeSeconds: true\n      })\n    };\n\n    this.tick = () => {\n      this.setState({\n        time: formatDistanceToNow(this.props.timeOfCreate, {\n          includeSeconds: true\n        })\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.intervalID = setInterval(() => this.tick(), 1000);\n    };\n\n    this.componentWillUnmount = () => {\n      clearInterval(this.intervalID);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"description\",\n        children: this.props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"created\",\n        children: [\"  created \", `${this.state.time}`, \"  ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nTaskLabel.defaultProps = {\n  text: null\n};\nTaskLabel.propTypes = {\n  timeOfCreate: PropTypes.number.isRequired,\n  text: PropTypes.string\n};","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-label/task-label.js"],"names":["React","Component","PropTypes","formatDistanceToNow","TaskLabel","state","time","props","timeOfCreate","includeSeconds","tick","setState","componentDidMount","intervalID","setInterval","componentWillUnmount","clearInterval","render","text","defaultProps","propTypes","number","isRequired","string"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAUC,mBAAV,QAAqC,UAArC;AAEA,eAAe,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAS7CI,KAT6C,GASrC;AACJC,MAAAA,IAAI,EAAEH,mBAAmB,CAAC,KAAKI,KAAL,CAAWC,YAAZ,EAA0B;AAAEC,QAAAA,cAAc,EAAE;AAAlB,OAA1B;AADrB,KATqC;;AAAA,SAc7CC,IAd6C,GAcxC,MAAI;AACL,WAAKC,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAEH,mBAAmB,CAAC,KAAKI,KAAL,CAAWC,YAAZ,EAA0B;AAAEC,UAAAA,cAAc,EAAE;AAAlB,SAA1B;AADf,OAAd;AAGH,KAlB4C;;AAAA,SAoB7CG,iBApB6C,GAoB3B,MAAI;AAClB,WAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM,KAAKJ,IAAL,EAAP,EAAoB,IAApB,CAA7B;AACH,KAtB4C;;AAAA,SAwB7CK,oBAxB6C,GAwBxB,MAAI;AACrBC,MAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACH,KA1B4C;AAAA;;AA4B7CI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBAAgC,KAAKV,KAAL,CAAWW;AAA3C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA,iCAAsC,GAAE,KAAKb,KAAL,CAAWC,IAAK,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAnC4C;AAA5BF,S,CACVe,Y,GAAe;AAClBD,EAAAA,IAAI,EAAE;AADY,C;AADLd,S,CAKVgB,S,GAAY;AACfZ,EAAAA,YAAY,EAAEN,SAAS,CAACmB,MAAV,CAAiBC,UADhB;AAEfJ,EAAAA,IAAI,EAAEhB,SAAS,CAACqB;AAFD,C","sourcesContent":["import React, {Component} from  'react';\r\nimport PropTypes from 'prop-types'\r\nimport {  formatDistanceToNow } from 'date-fns';\r\n\r\nexport default class TaskLabel extends Component {\r\n    static defaultProps = {\r\n        text: null\r\n    }\r\n\r\n    static propTypes = {\r\n        timeOfCreate: PropTypes.number.isRequired,\r\n        text: PropTypes.string,\r\n    }\r\n    state = {\r\n        time: formatDistanceToNow(this.props.timeOfCreate, { includeSeconds: true }),\r\n    }\r\n\r\n\r\n    tick=()=>{\r\n        this.setState({\r\n            time: formatDistanceToNow(this.props.timeOfCreate, { includeSeconds: true }),\r\n        });\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        this.intervalID = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount=()=>{\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <label>\r\n                <span className='description' >{this.props.text}</span>\r\n                <span className='created'>  created {`${this.state.time}`}  ago</span>\r\n            </label>\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}