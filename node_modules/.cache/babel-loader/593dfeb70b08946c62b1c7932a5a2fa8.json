{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-list\\\\task-list.js\";\nimport React, { Component } from 'react';\nimport TaskListItem from \"../task-list-item/task-list-item\";\nimport './task-list.css';\nimport Main from \"../main/main\";\nexport default class TaskList extends Component {\n  render() {\n    const {\n      addElement,\n      taskEditing,\n      createNewTask,\n      arr\n    } = this.props;\n    console.log(arr);\n    const taskArr = arr.listToDo;\n    const taskList = taskArr.map(({\n      className,\n      id,\n      text\n    }) => {\n      return /*#__PURE__*/_jsxDEV(TaskListItem, {\n        mainFunction: taskEditing,\n        className: className,\n        id: id,\n        other: text\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n; //\n// import React, {Component} from 'react'\n// import TaskListItem from \"../task-list-item/task-list-item\";\n// import './task-list.css'\n//\n//\n//\n// export default class TaskList extends Component {\n//\n//     maxID = 10;\n//     state = {\n//         listToDo: [\n//             { text: 'Completed', className: 'completed', id: 1},\n//             { text: 'Editing', className: 'editing', id:  2},\n//             { text: 'Active', className: '', id:  3},\n//         ]\n//     }\n//\n//     addElement =()=>{\n//         this.setState(({listToDo})=>{\n//             const newArr =  JSON.parse(JSON.stringify(listToDo))\n//             const newId = this.maxID++;\n//             console.log(newId)\n//             const newElement = {\n//                 text: \"random\", className: '', id: newId\n//             }\n//             newArr.unshift(newElement)\n//             console.log(newArr)\n//             return  {\n//                 listToDo: newArr\n//             }\n//         })\n//     }\n//\n//\n//     taskEditing = (id, task, val)=>{\n//         this.setState(({listToDo})=>{\n//             const newArr =  JSON.parse(JSON.stringify(listToDo))\n//             const inx = listToDo.findIndex((el)=>el.id === id)\n//             if(task === 'del'){\n//                 newArr.splice(inx, 1)\n//             }\n//             else if(val) {\n//                 newArr[inx].className = 'completed'\n//                 newArr[inx].text = val;\n//             }else{\n//                 newArr[inx].className = `${task}`\n//             }\n//             return {\n//                 listToDo: newArr\n//             }\n//         })\n//     }\n//\n//     render() {\n//         const taskArr =  this.state.listToDo;\n//         const taskList = taskArr.map(({className, id, text})=>{\n//             return <TaskListItem mainFunction={this.taskEditing}\n//                                  className={className} id={id} key={id}\n//                                  other={text}/>\n//         })\n//\n//         return (\n//             <ul className='todo-list'>\n//                 {taskList}\n//                 <button onClick={this.addElement}  className='newSa' />\n//             </ul>\n//         );\n//     };\n// };","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-list/task-list.js"],"names":["React","Component","TaskListItem","Main","TaskList","render","addElement","taskEditing","createNewTask","arr","props","console","log","taskArr","listToDo","taskList","map","className","id","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAIA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAG5CI,EAAAA,MAAM,GAAG;AACR,UAAQ;AAACC,MAAAA,UAAD;AAAaC,MAAAA,WAAb;AAA0BC,MAAAA,aAA1B;AAAyCC,MAAAA;AAAzC,QAAgD,KAAKC,KAA7D;AACGC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,UAAMI,OAAO,GAAIJ,GAAG,CAACK,QAArB;AAEA,UAAMC,QAAQ,GAAGF,OAAO,CAACG,GAAR,CAAY,CAAC;AAACC,MAAAA,SAAD;AAAYC,MAAAA,EAAZ;AAAgBC,MAAAA;AAAhB,KAAD,KAAyB;AAClD,0BAAO,QAAC,YAAD;AAAc,QAAA,YAAY,EAAEZ,WAA5B;AACc,QAAA,SAAS,EAAEU,SADzB;AACoC,QAAA,EAAE,EAAEC,EADxC;AAEc,QAAA,KAAK,EAAEC;AAFrB,SACiDD,EADjD;AAAA;AAAA;AAAA;AAAA,cAAP;AAGH,KAJgB,CAAjB;AAMA,wBACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AApB2C;AAqB/C,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react'\r\nimport TaskListItem from \"../task-list-item/task-list-item\";\r\nimport './task-list.css'\r\nimport Main from \"../main/main\";\r\n\r\n\r\n\r\nexport default class TaskList extends Component {\r\n\r\n\r\n    render() {\r\n     const   {addElement, taskEditing, createNewTask, arr} = this.props\r\n        console.log(arr)\r\n        const taskArr =  arr.listToDo;\r\n\r\n        const taskList = taskArr.map(({className, id, text})=>{\r\n            return <TaskListItem mainFunction={taskEditing}\r\n                                 className={className} id={id} key={id}\r\n                                 other={text}/>\r\n        })\r\n\r\n        return (\r\n            <ul className='todo-list'>\r\n                {taskList}\r\n                {/*<button onClick={addElement}  className='newSa' />*/}\r\n            </ul>\r\n        );\r\n    };\r\n};\r\n//\r\n// import React, {Component} from 'react'\r\n// import TaskListItem from \"../task-list-item/task-list-item\";\r\n// import './task-list.css'\r\n//\r\n//\r\n//\r\n// export default class TaskList extends Component {\r\n//\r\n//     maxID = 10;\r\n//     state = {\r\n//         listToDo: [\r\n//             { text: 'Completed', className: 'completed', id: 1},\r\n//             { text: 'Editing', className: 'editing', id:  2},\r\n//             { text: 'Active', className: '', id:  3},\r\n//         ]\r\n//     }\r\n//\r\n//     addElement =()=>{\r\n//         this.setState(({listToDo})=>{\r\n//             const newArr =  JSON.parse(JSON.stringify(listToDo))\r\n//             const newId = this.maxID++;\r\n//             console.log(newId)\r\n//             const newElement = {\r\n//                 text: \"random\", className: '', id: newId\r\n//             }\r\n//             newArr.unshift(newElement)\r\n//             console.log(newArr)\r\n//             return  {\r\n//                 listToDo: newArr\r\n//             }\r\n//         })\r\n//     }\r\n//\r\n//\r\n//     taskEditing = (id, task, val)=>{\r\n//         this.setState(({listToDo})=>{\r\n//             const newArr =  JSON.parse(JSON.stringify(listToDo))\r\n//             const inx = listToDo.findIndex((el)=>el.id === id)\r\n//             if(task === 'del'){\r\n//                 newArr.splice(inx, 1)\r\n//             }\r\n//             else if(val) {\r\n//                 newArr[inx].className = 'completed'\r\n//                 newArr[inx].text = val;\r\n//             }else{\r\n//                 newArr[inx].className = `${task}`\r\n//             }\r\n//             return {\r\n//                 listToDo: newArr\r\n//             }\r\n//         })\r\n//     }\r\n//\r\n//     render() {\r\n//         const taskArr =  this.state.listToDo;\r\n//         const taskList = taskArr.map(({className, id, text})=>{\r\n//             return <TaskListItem mainFunction={this.taskEditing}\r\n//                                  className={className} id={id} key={id}\r\n//                                  other={text}/>\r\n//         })\r\n//\r\n//         return (\r\n//             <ul className='todo-list'>\r\n//                 {taskList}\r\n//                 <button onClick={this.addElement}  className='newSa' />\r\n//             </ul>\r\n//         );\r\n//     };\r\n// };"]},"metadata":{},"sourceType":"module"}