{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-toogle\\\\task-toggle.js\";\nimport React, { Component } from 'react';\nimport './task-toggle.css';\nexport default class TaskToggle extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n\n    this.editTask = event => {\n      const {\n        id,\n        mainFunction\n      } = this.props;\n      const val = event.target.value;\n      return mainFunction(id, '', val); // if( event.target.key === 13){\n      //     console.log(id)\n      // return  mainFunction(id, '')\n    };\n  }\n\n  render() {\n    const {\n      className,\n      type,\n      value,\n      changeStatus,\n      id,\n      mainFunction\n    } = this.props;\n\n    let input = /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: event => {\n        this.editTask(event);\n      },\n      defaultValue: value,\n      type: type,\n      className: className\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this);\n\n    let b = /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: () => changeStatus(id),\n      type: type,\n      className: className\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }, this);\n\n    return value ? a : b; // if(value){\n    //     return  <input onChange={(event)=>{this.editTask(event)}}\n    //                    defaultValue={value} type={type} className={className}/>\n    // }\n    // return (\n    //     <input onClick={()=>changeStatus(id)}  type={type} className={className}/>\n    // );\n  }\n\n} // onCompleted = ()=>{\n//     const {id,mainFunction} = this.props;\n//         if(this.props.mainClass === 'completed'){\n//             this.setState(({completed})=> {\n//                 return  {\n//                     completed: true\n//                 }\n//             })\n//             return  mainFunction(id, '')\n//         }\n//         else {\n//             this.setState(({completed})=> {\n//                 return  {\n//                     completed: false\n//                 }\n//             })\n//             return  mainFunction(id, 'completed')\n//         }\n//     }","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-toogle/task-toggle.js"],"names":["React","Component","TaskToggle","state","value","editTask","event","id","mainFunction","props","val","target","render","className","type","changeStatus","input","b","a"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,mBAAP;AAIA,eAAe,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE9CE,KAF8C,GAEtC;AACJC,MAAAA,KAAK,EAAE;AADH,KAFsC;;AAAA,SAO9CC,QAP8C,GAOnCC,KAAD,IAAS;AACf,YAAM;AAACC,QAAAA,EAAD;AAAKC,QAAAA;AAAL,UAAqB,KAAKC,KAAhC;AACA,YAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAaP,KAAzB;AACA,aAAQI,YAAY,CAACD,EAAD,EAAK,EAAL,EAASG,GAAT,CAApB,CAHe,CAIf;AACA;AAEI;AAEP,KAhB6C;AAAA;;AAmB9CE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA,IAAZ;AAAkBV,MAAAA,KAAlB;AAAwBW,MAAAA,YAAxB;AAAqCR,MAAAA,EAArC;AAAwCC,MAAAA;AAAxC,QAAwD,KAAKC,KAAnE;;AACA,QAAIO,KAAK,gBAAG;AAAO,MAAA,QAAQ,EAAGV,KAAD,IAAS;AAAC,aAAKD,QAAL,CAAcC,KAAd;AAAqB,OAAhD;AACG,MAAA,YAAY,EAAEF,KADjB;AACwB,MAAA,IAAI,EAAEU,IAD9B;AACoC,MAAA,SAAS,EAAED;AAD/C;AAAA;AAAA;AAAA;AAAA,YAAZ;;AAEA,QAAII,CAAC,gBAAI;AAAO,MAAA,OAAO,EAAE,MAAIF,YAAY,CAACR,EAAD,CAAhC;AAAuC,MAAA,IAAI,EAAEO,IAA7C;AAAmD,MAAA,SAAS,EAAED;AAA9D;AAAA;AAAA;AAAA;AAAA,YAAT;;AAEA,WAAQT,KAAD,GAASc,CAAT,GAAaD,CAApB,CANK,CAQL;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAlC6C,C,CAwClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react'\r\nimport './task-toggle.css'\r\n\r\n\r\n\r\nexport default class TaskToggle extends Component {\r\n\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n\r\n    editTask =(event)=>{\r\n        const {id, mainFunction} = this.props;\r\n        const val = event.target.value\r\n        return  mainFunction(id, '', val)\r\n        // if( event.target.key === 13){\r\n        //     console.log(id)\r\n\r\n            // return  mainFunction(id, '')\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {className, type, value,changeStatus,id,mainFunction} = this.props;\r\n        let input = <input onChange={(event)=>{this.editTask(event)}}\r\n                       defaultValue={value} type={type} className={className}/>;\r\n        let b =  <input onClick={()=>changeStatus(id)}  type={type} className={className}/>;\r\n\r\n        return (value)? a : b;\r\n\r\n        // if(value){\r\n        //     return  <input onChange={(event)=>{this.editTask(event)}}\r\n        //                    defaultValue={value} type={type} className={className}/>\r\n        // }\r\n        // return (\r\n        //     <input onClick={()=>changeStatus(id)}  type={type} className={className}/>\r\n        // );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n// onCompleted = ()=>{\r\n//     const {id,mainFunction} = this.props;\r\n//         if(this.props.mainClass === 'completed'){\r\n//             this.setState(({completed})=> {\r\n//                 return  {\r\n//                     completed: true\r\n//                 }\r\n//             })\r\n//             return  mainFunction(id, '')\r\n//         }\r\n//         else {\r\n//             this.setState(({completed})=> {\r\n//                 return  {\r\n//                     completed: false\r\n//                 }\r\n//             })\r\n//             return  mainFunction(id, 'completed')\r\n//         }\r\n//     }\r\n"]},"metadata":{},"sourceType":"module"}