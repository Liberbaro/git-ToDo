{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\todo\\\\src\\\\components\\\\task-toogle\\\\task-toggle.js\";\nimport React, { Component } from 'react';\nimport './task-toggle.css';\nexport default class TaskToggle extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.editTask = event => {\n      if (event.keyCode === 13) {\n        const {\n          id,\n          mainFunction\n        } = this.props;\n        console.log(id); // return  mainFunction(id, 'newTask')\n      }\n    };\n\n    this.changeStatus = () => {\n      const {\n        id,\n        mainFunction\n      } = this.props; // let sassed = false;\n\n      let newStatus = '';\n\n      if (this.props.mainClass === 'completed') {\n        newStatus = ''; // sassed = false;\n      } else {\n        newStatus = 'completed'; // sassed = true;\n      } // this.setState(({completed})=> {\n      //     return  {\n      //         completed: sassed\n      //     }\n      // })\n\n\n      return mainFunction(id, newStatus);\n    };\n  }\n\n  render() {\n    const {\n      className,\n      type,\n      value\n    } = this.props;\n\n    if (value) {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyDown: event => {\n          this.editTask(event);\n        },\n        defaultValue: value,\n        type: type,\n        className: className\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: this.changeStatus,\n      type: type,\n      className: className\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n} // onCompleted = ()=>{\n//     const {id,mainFunction} = this.props;\n//         if(this.props.mainClass === 'completed'){\n//             this.setState(({completed})=> {\n//                 return  {\n//                     completed: true\n//                 }\n//             })\n//             return  mainFunction(id, '')\n//         }\n//         else {\n//             this.setState(({completed})=> {\n//                 return  {\n//                     completed: false\n//                 }\n//             })\n//             return  mainFunction(id, 'completed')\n//         }\n//     }","map":{"version":3,"sources":["D:/project/react/todo/src/components/task-toogle/task-toggle.js"],"names":["React","Component","TaskToggle","editTask","event","keyCode","id","mainFunction","props","console","log","changeStatus","newStatus","mainClass","render","className","type","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,mBAAP;AAIA,eAAe,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAK9CE,QAL8C,GAKnCC,KAAD,IAAS;AACf,UAAGA,KAAK,CAACC,OAAN,KAAkB,EAArB,EAAwB;AACpB,cAAM;AAACC,UAAAA,EAAD;AAAIC,UAAAA;AAAJ,YAAoB,KAAKC,KAA/B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ,EAFoB,CAGpB;AACH;AACJ,KAX6C;;AAAA,SAa9CK,YAb8C,GAa/B,MAAI;AACf,YAAM;AAACL,QAAAA,EAAD;AAAIC,QAAAA;AAAJ,UAAoB,KAAKC,KAA/B,CADe,CAEf;;AACA,UAAII,SAAS,GAAG,EAAhB;;AACA,UAAG,KAAKJ,KAAL,CAAWK,SAAX,KAAyB,WAA5B,EAAwC;AACpCD,QAAAA,SAAS,GAAG,EAAZ,CADoC,CAEpC;AACH,OAHD,MAIK;AACDA,QAAAA,SAAS,GAAG,WAAZ,CADC,CAED;AACH,OAXc,CAYf;AACA;AACA;AACA;AACA;;;AACA,aAAQL,YAAY,CAACD,EAAD,EAAKM,SAAL,CAApB;AACH,KA/B6C;AAAA;;AAiC9CE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA;AAAlB,QAA2B,KAAKT,KAAtC;;AACA,QAAGS,KAAH,EAAS;AACL,0BAAQ;AAAO,QAAA,SAAS,EAAGb,KAAD,IAAS;AAAC,eAAKD,QAAL,CAAcC,KAAd;AAAqB,SAAjD;AACO,QAAA,YAAY,EAAEa,KADrB;AAC4B,QAAA,IAAI,EAAED,IADlC;AACwC,QAAA,SAAS,EAAED;AADnD;AAAA;AAAA;AAAA;AAAA,cAAR;AAEH;;AACD,wBACI;AAAO,MAAA,OAAO,EAAE,KAAKJ,YAArB;AAAoC,MAAA,IAAI,EAAEK,IAA1C;AAAgD,MAAA,SAAS,EAAED;AAA3D;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AA1C6C,C,CAgDlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react'\r\nimport './task-toggle.css'\r\n\r\n\r\n\r\nexport default class TaskToggle extends Component {\r\n\r\n    // state = {\r\n    //     competed: false\r\n    // }\r\n    editTask =(event)=>{\r\n        if(event.keyCode === 13){\r\n            const {id,mainFunction} = this.props;\r\n            console.log(id)\r\n            // return  mainFunction(id, 'newTask')\r\n        }\r\n    }\r\n\r\n    changeStatus = ()=>{\r\n        const {id,mainFunction} = this.props;\r\n        // let sassed = false;\r\n        let newStatus = '';\r\n        if(this.props.mainClass === 'completed'){\r\n            newStatus = ''\r\n            // sassed = false;\r\n        }\r\n        else {\r\n            newStatus = 'completed'\r\n            // sassed = true;\r\n        }\r\n        // this.setState(({completed})=> {\r\n        //     return  {\r\n        //         completed: sassed\r\n        //     }\r\n        // })\r\n        return  mainFunction(id, newStatus)\r\n    }\r\n\r\n    render() {\r\n        const {className, type, value} = this.props;\r\n        if(value){\r\n            return  <input onKeyDown={(event)=>{this.editTask(event)}}\r\n                           defaultValue={value} type={type} className={className}/>\r\n        }\r\n        return (\r\n            <input onClick={this.changeStatus}  type={type} className={className}/>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n// onCompleted = ()=>{\r\n//     const {id,mainFunction} = this.props;\r\n//         if(this.props.mainClass === 'completed'){\r\n//             this.setState(({completed})=> {\r\n//                 return  {\r\n//                     completed: true\r\n//                 }\r\n//             })\r\n//             return  mainFunction(id, '')\r\n//         }\r\n//         else {\r\n//             this.setState(({completed})=> {\r\n//                 return  {\r\n//                     completed: false\r\n//                 }\r\n//             })\r\n//             return  mainFunction(id, 'completed')\r\n//         }\r\n//     }\r\n"]},"metadata":{},"sourceType":"module"}