[{"D:\\project\\react\\todo\\src\\index.jsx":"1","D:\\project\\react\\todo\\src\\components\\app\\app.jsx":"2","D:\\project\\react\\todo\\src\\hooks\\useTaskEdit.js":"3","D:\\project\\react\\todo\\src\\hooks\\useListToDo.js":"4","D:\\project\\react\\todo\\src\\hooks\\useCreateTask.js":"5","D:\\project\\react\\todo\\src\\hooks\\useFilter.js":"6","D:\\project\\react\\todo\\src\\components\\footer\\footer.jsx":"7","D:\\project\\react\\todo\\src\\components\\task-list\\task-list.jsx":"8","D:\\project\\react\\todo\\src\\components\\new-task-form\\new-task-form.jsx":"9","D:\\project\\react\\todo\\src\\components\\task-filter\\task-filter.jsx":"10","D:\\project\\react\\todo\\src\\components\\editing-task\\editing-task.jsx":"11","D:\\project\\react\\todo\\src\\components\\task\\task.jsx":"12","D:\\project\\react\\todo\\src\\hooks\\useEditing.js":"13"},{"size":183,"mtime":1616235153263,"results":"14","hashOfConfig":"15"},{"size":1199,"mtime":1616236565821,"results":"16","hashOfConfig":"15"},{"size":1254,"mtime":1616236580138,"results":"17","hashOfConfig":"15"},{"size":360,"mtime":1616236565886,"results":"18","hashOfConfig":"15"},{"size":1651,"mtime":1616236203055,"results":"19","hashOfConfig":"15"},{"size":716,"mtime":1616235153213,"results":"20","hashOfConfig":"15"},{"size":1332,"mtime":1616235152991,"results":"21","hashOfConfig":"15"},{"size":1327,"mtime":1616235153124,"results":"22","hashOfConfig":"15"},{"size":1438,"mtime":1616236229068,"results":"23","hashOfConfig":"15"},{"size":5083,"mtime":1616235153055,"results":"24","hashOfConfig":"15"},{"size":607,"mtime":1616236565862,"results":"25","hashOfConfig":"15"},{"size":6627,"mtime":1616235722083,"results":"26","hashOfConfig":"15"},{"size":775,"mtime":1616236565875,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jsd1m6",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},"D:\\project\\react\\todo\\src\\index.jsx",[],"D:\\project\\react\\todo\\src\\components\\app\\app.jsx",[],"D:\\project\\react\\todo\\src\\hooks\\useTaskEdit.js",[],"D:\\project\\react\\todo\\src\\hooks\\useListToDo.js",[],["57","58","59","60","61"],"D:\\project\\react\\todo\\src\\hooks\\useCreateTask.js",["62","63"],"import { useState } from \"react\";\n\nconst useCreateTask = (changeListToDo, activeFilter) => {\n  const [value, setValue] = useState(\"\");\n  const [minutes, setMin] = useState(\"\");\n  const [seconds, setSec] = useState(\"\");\n\n  const createNewTask = (text, min, sec) => {\n    console.log(text);\n    return {\n      text,\n      min,\n      sec,\n      className: \"\",\n      id: Date.now(),\n      done: false,\n      display: activeFilter === \"completed\" ? \"none\" : \"block\",\n      timeOfCreate: new Date().getTime(),\n    };\n  };\n\n  const addTaskToListToDo = (text, min = 0, sec = 0) => {\n    changeListToDo((oldList) => {\n      const newList = oldList;\n      const newTask = createNewTask(text, min, sec);\n      newList.unshift(newTask);\n      return newList;\n    });\n  };\n\n  const onKeyDown = (evt) => {\n    if (evt.keyCode === 13) {\n      evt.preventDefault();\n      if (value) {\n        addTaskToListToDo(value, minutes, seconds);\n      }\n      setValue(\"\");\n      setMin(\"\");\n      setSec(\"\");\n    }\n  };\n\n  const clearValue = (dirtyValue, num, unit) => {\n    let res = dirtyValue.replace(/[^\\d]/g, \"\");\n    if (res > num) res = `${num}`;\n    return unit ? setMin(res) : setSec(res);\n  };\n\n  const onChangeInput = (evt) => {\n    const { value: newValue } = evt.target;\n    const { className } = evt.target;\n    const timer = 'new-todo-form__timer';\n    if (className === \"new-todo\") setValue(newValue);\n    if (className === `${timer} min`) clearValue(newValue, 60, \"min\");\n    if (className === `${timer} sec`) clearValue(newValue, 59);\n  };\n\n  const taskFormFunc = { onKeyDown, onChangeInput, minutes, seconds, value };\n  return taskFormFunc;\n};\n\nexport default useCreateTask;\n","D:\\project\\react\\todo\\src\\hooks\\useFilter.js",[],"D:\\project\\react\\todo\\src\\components\\footer\\footer.jsx",[],"D:\\project\\react\\todo\\src\\components\\task-list\\task-list.jsx",[],"D:\\project\\react\\todo\\src\\components\\new-task-form\\new-task-form.jsx",[],"D:\\project\\react\\todo\\src\\components\\task-filter\\task-filter.jsx",[],"D:\\project\\react\\todo\\src\\components\\editing-task\\editing-task.jsx",[],"D:\\project\\react\\todo\\src\\components\\task\\task.jsx",[],"D:\\project\\react\\todo\\src\\hooks\\useEditing.js",["64","65"],"import { useState, useEffect } from \"react\";\n\nconst useEditing = (saveNewTaskValue, text) => {\n  const [newValue, setNewValues] = useState(`${text}`);\n\n  const saveValueAfterClick = (evt) => {\n    return evt.target.className !== \"edit\" ? saveNewTaskValue(newValue) : null;\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", saveValueAfterClick);\n    return () => document.removeEventListener(\"mousedown\", saveValueAfterClick);\n  }, [newValue]);\n\n  const onKeyDownEditValue = (evt) => {\n    return evt.keyCode === 13 || evt.keyCode === 27\n      ? saveNewTaskValue(newValue)\n      : null;\n  };\n\n  const onChangeEditValue = (evt) => {\n    setNewValues(evt.target.value);\n  };\n\n  return { onChangeEditValue, onKeyDownEditValue };\n};\n\nexport default useEditing;\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":9,"column":5,"nodeType":"78","messageId":"79","endLine":9,"endColumn":16},{"ruleId":"76","severity":1,"message":"77","line":52,"column":5,"nodeType":"78","messageId":"79","endLine":52,"endColumn":16},{"ruleId":"80","severity":2,"message":"81","line":3,"column":39,"nodeType":"82","messageId":"83","endLine":3,"endColumn":43},{"ruleId":"84","severity":2,"message":"85","line":13,"column":6,"nodeType":"86","endLine":13,"endColumn":16,"suggestions":"87"},"lines-around-directive",["88"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-unused-vars","'text' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveValueAfterClick'. Either include it or remove the dependency array.","ArrayExpression",["89"],"padding-line-between-statements",{"desc":"90","fix":"91"},"Update the dependencies array to be: [newValue, saveValueAfterClick]",{"range":"92","text":"93"},[443,453],"[newValue, saveValueAfterClick]"]